{"mappings":";;;AACA;AEDA,IAgBA,yCAaC;UAbI,YAAW;IAAX,YAAW,CAAX,YAAW,CACd,aAAa,IAAb,CAAa,IAAb,aAAa;IADV,YAAW,CAAX,YAAW,CAEd,aAAa,IAAb,CAAa,IAAb,aAAa;IAFV,YAAW,CAAX,YAAW,CAGd,cAAc,IAAd,CAAc,IAAd,cAAc;IAHX,YAAW,CAAX,YAAW,CAId,YAAY,IAAZ,CAAY,IAAZ,YAAY;IAJT,YAAW,CAAX,YAAW,CAKd,SAAS,IAAT,CAAS,IAAT,SAAS;IALN,YAAW,CAAX,YAAW,CAMd,cAAc,IAAd,CAAc,IAAd,cAAc;IANX,YAAW,CAAX,YAAW,CAOd,eAAe,IAAf,CAAe,IAAf,eAAe;IAPZ,YAAW,CAAX,YAAW,CAQd,eAAe,IAAf,CAAe,IAAf,eAAe;IARZ,YAAW,CAAX,YAAW,CASd,YAAY,IAAZ,CAAY,IAAZ,YAAY;IATT,YAAW,CAAX,YAAW,CAUd,kBAAkB,IAAlB,CAAkB,IAAlB,kBAAkB;IAVf,YAAW,CAAX,YAAW,CAWd,YAAY,IAAZ,EAAY,IAAZ,YAAY;IAXT,YAAW,CAAX,YAAW,CAYd,cAAc,IAAd,EAAc,IAAd,cAAc;GAZX,yCAAW,KAAX,yCAAW;IA0DhB,yCAMC;UANI,UAAS;IAAT,UAAS,CACZ,kBAAgB,IAAhB,kBAAgB;IADb,UAAS,CAEZ,gBAAc,IAAd,gBAAc;IAFX,UAAS,CAGZ,eAAa,IAAb,eAAa;IAHV,UAAS,CAIZ,aAAW,IAAX,aAAW;IAJR,UAAS,CAKZ,cAAY,IAAZ,cAAY;GALT,yCAAS,KAAT,yCAAS;IAyFd,yCAGC;UAHI,eAAc;IAAd,eAAc,CACjB,MAAI,IAAJ,MAAI;IADD,eAAc,CAEjB,IAAE,IAAF,IAAE;GAFC,yCAAc,KAAd,yCAAc;;ADnKnB;AEAA;ACEA,MAAM,8BAAQ;IAGZ,aAAc;QACZ,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;KACvB;IAED,SAAS,GAAG,CAAC,UAAuB,GAAW;QAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACnC,CAAC;IAEF,WAAW,GAAG,CAAC,UAAuB,GAAW;QAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,GAAK,EAAE,KAAK,UAAU,CAAC,CAAC;KACvE,CAAC;IAEF,MAAM,GAAG,CAAC,WAAyB,GAAW;QAC5C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE,GAC1B,EAAE,CAAC,SAAS,KAAK,WAAW,CAAC,SAAS,GAAG,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CACtF,CAAC;KACH,CAAC;CACH;IAED,wCAAwB,GAAT,8BAAQ;;;ADdR;IAuBb,AAAO,QAAQ,GAAc,IAAI,CAAA,GAAA,wCAAQ,CAAA,EAAE,CAAC;IAE5C,YAAY,OAAsB,CAAE;QAClC,MAAM,OACJ,GAAG,CAAA,OACH,GAAG,CAAA,QACH,IAAI,CAAA,MACJ,EAAE,CAAA,QACF,IAAI,CAAA,aACJ,SAAS,CAAA,cACT,UAAU,CAAA,cACV,UAAU,CAAA,WACV,OAAO,CAAA,WACP,OAAO,CAAA,iBACP,aAAa,CAAA,IACd,GAAG,OAAO,AAAC;QAEZ,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;KACpC;IAED,WAAW,GAAG,CAAC,QAAE,IAAI,CAAA,WAAE,OAAO,CAAA,EAAgB,GAAW;QACvD,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YACrC,OAAQ,IAAI;gBACV,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,WAAW;oBAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC9B,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,WAAW;oBAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC9B,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,YAAY;oBAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC/B,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;oBACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC7B,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,OAAO;oBACtB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC1B,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,YAAY;oBAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC/B,MAAM;gBACR;oBACE,MAAM;aACT;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,cAAc;gBACnC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE;aAC9B,CAAC,CAAC;SACJ,MAAM,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,SAAS,EAAE;YAC7C,OAAQ,IAAI;gBACV,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,aAAa;oBAC5B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;oBAChC,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,aAAa;oBAC5B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;oBAChC,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;oBACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC7B,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,gBAAgB;oBAC/B,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC;oBACnC,MAAM;gBACR,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;oBACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBAC7B,MAAM;gBACR;oBACE,MAAM;aACT;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,cAAc;gBACnC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE;aAC9B,CAAC,CAAC;SACJ,MAAM,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,QAAQ,EAAE;YAC5C,OAAQ,IAAI;gBACV,KAAK,CAAA,GAAA,yCAAW,CAAA,CAAC,YAAY;oBAC3B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;oBAClC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;oBAClC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;oBACpC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;oBAChC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC/B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC;oBACzC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC;oBAC3C,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC;oBAC3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;oBACrC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC;oBACjD,MAAM;gBACR;oBACE,MAAM;aACT;YACD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,cAAc;gBACnC,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE;aAC9B,CAAC,CAAC;SACJ;KACF,CAAC;IAEF,AAAO,SAAS,GAAG,CAAC,UAAuB,GAAK;QAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;KACrC,CAAC;IAEF,AAAO,QAAQ,GAAG,IAAsB,CAAA;YACtC,IAAI,EAAE,IAAI,CAAC,SAAS;YACpB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,GAAG,EAAE,IAAI,CAAC,QAAQ;YAClB,GAAG,EAAE,IAAI,CAAC,QAAQ;YAClB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,EAAE,EAAE,IAAI,CAAC,OAAO;SACjB,CAAA,AAAC,CAAC;CACJ;;;AE7JD;ACAA;ACAA;;AAIA,MAAM,4BAAM;IAaV,YAAY,aAAE,SAAS,CAAA,SAAE,KAAK,CAAA,YAAE,QAAQ,CAAA,kBAAE,cAAc,CAAA,cAAE,UAAU,CAAA,EAAgB,CAAE;QACpF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAED,AAAQ,MAAM,GAAG,IAAM;QACrB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC7C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,IAAI,CAAC,cAAc,EACrB,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;QAE9C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAe,GAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAC1C,CAAC;IAEF,AAAQ,iBAAiB,GAAG,CAAC,KAAmB,GAAK;QACnD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,aAAa;YAClC,YAAY,EAAE,KAAK;SACpB,CAAC,CAAC;KACJ,CAAC;IAEF,AAAO,MAAM,GAAG,CAAC,KAAa,EAAE,UAAmB,GAAG,KAAK,GAAK;QAC9D,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,IAAI,CAAC,UAAU,EACjB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAEzC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAE7C,CAAC;CACH;IAED,wCAAsB,GAAP,4BAAM;;;ACxDrB;AAGA,MAAM,2BAAK;IAWT,YAAY,aAAE,SAAS,CAAA,SAAE,KAAK,CAAA,QAAE,IAAI,CAAA,cAAE,UAAU,CAAA,EAAe,CAAE;QAC/D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAED,AAAQ,MAAM,GAAG,IAAM;QACrB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAClC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;KACpC,CAAC;IAEF,MAAM,GAAG,CAAC,KAAa,EAAE,KAAa,GAAK;QACzC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,IAAI,CAAC,UAAU,EACjB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAExC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAE5C,CAAC;CACH;IAED,wCAAqB,GAAN,2BAAK;;;AC1CpB;AAMA,MAAM,iCAAW;IASf,YAAY,aACV,SAAS,CAAA,aACT,SAAS,CAAA,SACT,KAAK,CAAA,cACL,UAAU,CAAA,EACU,CAAE;QACtB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC7B;IAED,AAAQ,MAAM,GAAG,CAAC,SAAsB,GAAW;QACjD,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAClD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC1C,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC;YACV,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,UAAU,EAAE,IAAI,CAAC,UAAU;SAC5B,CAAC,CAAC;KACJ,CAAC;IAEF,MAAM,GAAG,CAAC,aACR,SAAS,CAAA,SACT,KAAK,CAAA,cACL,UAAU,CAAA,EACc,GAAW;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAE3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,MAAM,eAAe,GACnB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,eAAe,CAAC,AAAC;QAChD,IAAI,eAAe;YACjB,IAAI,UAAU,EAAE;gBACd,eAAe,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjD,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aACjD,MAAM;gBACL,eAAe,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAClD,eAAe,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAChD;SACF;KACF,CAAC;CACH;IAED,wCAA2B,GAAZ,iCAAW;;;;AH/C1B,MAAM,+BAAS;IAiBb,YAAY,WAA4B,CAAE;QACxC,MAAM,aAAE,SAAS,CAAA,SAAE,KAAK,CAAA,YAAE,QAAQ,CAAA,WAAE,OAAO,CAAA,EAAE,GAAG,WAAW,AAAC;QAC5D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpB;IAED,AAAQ,IAAI,GAAG,CAAC,OAA0B,GAAK;QAC7C,MAAM,oBAAE,gBAAgB,CAAA,SAAE,KAAK,CAAA,aAAE,SAAS,CAAA,EAAE,GAAG,OAAO,AAAC;QACvD,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAChD,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAElD,MAAM,MAAE,EAAE,CAAA,QAAE,IAAI,CAAA,EAAE,GAAG,IAAI,CAAC,KAAK,AAAC;QAEhC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;QAC9E,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAChD,SAAS,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAC,GAC1C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;gBACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,WAAW;gBAChC,YAAY,EAAE,CAAC;aAChB,CAAC,CACH,CAAC;QAEF,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,wCAAM,CAAA,CAAC;gBACzB,SAAS,EAAE,WAAW;uBACtB,KAAK;gBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,cAAc,EAAE,CAAA,GAAA,yCAAc,CAAA,CAAC,EAAE;gBACjC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;aAClC,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,GAAA,wCAAK,CAAA,CAAC;gBACvB,SAAS,EAAE,WAAW;uBACtB,KAAK;gBACL,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;aAClC,CAAC,CAAC;YAGL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA,GAAA,wCAAM,CAAA,CAAC;gBAC3B,SAAS,EAAE,WAAW;gBACtB,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,cAAc,EAAE,CAAA,GAAA,yCAAc,CAAA,CAAC,IAAI;gBACnC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;aAClC,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA,GAAA,wCAAK,CAAA,CAAC;gBACzB,SAAS,EAAE,WAAW;gBACtB,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,IAAI;gBACV,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;aAClC,CAAC,CAAC;SAEN,MAAM;YACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,wCAAM,CAAA,CAAC;gBACzB,SAAS,EAAE,WAAW;uBACtB,KAAK;gBACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;aAClC,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,GAAA,wCAAK,CAAA,CAAC;gBACvB,SAAS,EAAE,WAAW;uBACtB,KAAK;gBACL,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;aAClC,CAAC,CAAC;SAEN;QAED,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAE9B,MAAM,kBAAkB,GAAwB;YAC9C,SAAS,EAAE,SAAS;uBACpB,SAAS;YACT,KAAK,EAAE,gBAAgB;YACvB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;SAClC,AAAC;QACF,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA,GAAA,wCAAW,CAAA,CAAC,kBAAkB,CAAC,CAAC;QAGzD,IAAI,IAAI,CAAC,SAAS,EAChB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KAEpC,CAAC;IAEF,AAAO,MAAM,GAAG,CAAC,KAAoB,EAAE,OAA0B,GAAK;QACpE,MAAM,QAAE,IAAI,CAAA,MAAE,EAAE,CAAA,cAAE,UAAU,CAAA,WAAE,OAAO,CAAA,cAAE,UAAU,CAAA,EAAE,GAAG,KAAK,AAAC;QAC5D,MAAM,oBAAE,gBAAgB,CAAA,SAAE,KAAK,CAAA,aAAE,SAAS,CAAA,EAAE,GAAG,OAAO,AAAC;QAEvD,IAAI,OAAO,EACT,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;QAEjC,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;YAC9C,IAAI,OAAO,EACT,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAE1C;QACD,IAAI,UAAU,EACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;aAExC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAE9B,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAC1B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;uBACtB,SAAS;YACT,KAAK,EAAE,gBAAgB;YACvB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;SAClC,CAAC,CAAC;KAEN,CAAC;CACH;IAED,wCAAyB,GAAV,+BAAS;;;AIvJxB;;AAIA,MAAM,2BAAK;IAWT,YAAY,cAAE,UAAU,CAAA,aAAE,SAAS,CAAA,SAAE,KAAK,CAAA,YAAE,QAAQ,CAAA,cAAE,UAAU,CAAA,EAAiB,CAAE;QACjF,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAED,AAAQ,MAAM,GAAG,CAAC,CAAe,GAAK;QACpC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,gBAAgB;YACrC,YAAY,EAAE,CAAC;SAChB,CAAC,CAAC;KACJ,CAAC;IAEF,AAAQ,MAAM,GAAG,IAAM;QACrB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC5C,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,GAAK;YAC9B,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,EAAE,AAAC;YACtC,IAAI,IAAI,CAAC,UAAU,EACjB,WAAW,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;iBAExC,WAAW,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAE3C,WAAW,CAAC,WAAW,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAClC,WAAW,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAC,GAAK,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YACnE,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAChC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;QACzD,IAAI,SAAS,EAAE;YACb,oCAAoC;YACpC,MAAM,cAAc,GAA+B,SAAS,CAAC,gBAAgB,CAAC,cAAc,CAAC,AAAC;YAC9F,IAAI,MAAM,GAAG,CAAC,AAAC;YACf,IAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,CAAE;gBAC7D,IAAI,MAAM,GAAG,GAAG,EACd,MAAM,GAAG,GAAG,CAAC;gBAEf,IAAI,IAAI,CAAC,UAAU,EACjB,cAAc,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;qBAE/C,cAAc,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;gBAGlD,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC;aACtB;YACD,MAAM,GAAG,CAAC,CAAC;SACZ;KACF,CAAC;IAEF,AAAO,MAAM,GAAG,CAAC,SAAE,KAAK,CAAA,SAAE,KAAK,CAAA,EAAe,GAAK;QACjD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,MAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;QAC9D,IAAI,cAAc,EAChB,cAAc,CAAC,MAAM,EAAE,CAAC;QAE1B,IAAI,CAAC,MAAM,EAAE,CAAC;KACf,CAAC;IAEF,AAAQ,UAAU,GAAG,IAAM;QACzB,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,AAAC;QAC5C,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACnC,OAAO,KAAK,CAAC;KACd,CAAC;CACH;IAED,wCAAqB,GAAN,2BAAK;;;AL1EpB,MAAM,0BAAI;IAaR,YAAY,WAAE,OAAO,CAAA,aAAE,SAAS,CAAA,gBAAE,YAAY,CAAA,oBAAE,gBAAgB,CAAA,EAAgB,CAAE;QAChF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,wCAAQ,CAAA,EAAE,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC;0BAAE,YAAY;8BAAE,gBAAgB;SAAE,CAAC,CAAC;KAC/C;IAED,AAAQ,IAAI,GAAG,CAAC,gBAAE,YAAY,CAAA,oBAAE,gBAAgB,CAAA,EAAkB,GAAK;QACrE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA,GAAA,wCAAS,CAAA,CAAC;YAC1B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,KAAK,EAAE,IAAI,CAAC,OAAO;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,gBAAgB;SAC1B,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACxB,MAAM,UAAU,GAAkB;gBAChC,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,UAAU,EAAE,YAAY,CAAC,KAAK;gBAC9B,KAAK,EAAE,YAAY,CAAC,KAAK;gBACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,AAAC;YACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,wCAAK,CAAA,CAAC,UAAU,CAAC,CAAC;SACpC;KACF,CAAC;IAEF,AAAO,UAAU,GAAG,CAAC,SAAE,KAAK,CAAA,cAAE,UAAU,CAAA,oBAAE,gBAAgB,CAAA,EAAoB,GAAK;QACjF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC;QAC5C,IAAI,KAAK,CAAC,OAAO,EACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAEjC,CAAC;IAEF,AAAO,SAAS,GAAG,CAAC,UAAuB,GAAK;QAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;KACrC,CAAC;CACH;IAED,wCAAoB,GAAL,0BAAI;;;;AM9DnB,MAAM,yCAAkB,GAAG,CAAC,IAAY,GAAK;IAC3C,MAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAAC;IACnD,MAAM,QAAQ,GAAG,eAAe,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,AAAC;IAE9D,OAAO,QAAQ,CAAC;CACjB,AAAC;AAEF,MAAM,yCAAc,GAAG,CAAC,GAAW,EAAE,GAAW,EAAE,IAAY,GAAK;IACjE,MAAM,UAAU,GAAG,EAAE,AAAC;IACtB,IAAK,IAAI,KAAK,GAAG,GAAG,EAAE,KAAK,IAAI,GAAG,EAAE,KAAK,IAAI,IAAI,CAAE;QACjD,MAAM,SAAS,GAAG,yCAAkB,CAAC,IAAI,CAAC,AAAC;QAC3C,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,AAAC;QACpD,IAAI,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,GAAG,EAChC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAEvB,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAE/B;IACD,IAAI,AAAC,CAAA,GAAG,GAAG,GAAG,CAAA,GAAI,IAAI,KAAK,CAAC,EAC1B,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEvB,OAAO,UAAU,CAAC;CACnB,AAAC;AAEF,MAAM,yCAAe,GAAG,CAAC,OAAE,GAAG,CAAA,OAAE,GAAG,CAAA,QAAE,IAAI,CAAA,EAAmB,GAAK;IAC/D,MAAM,KAAK,GAAG,yCAAc,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,AAAC;IAC7C,MAAM,KAAK,GAAG,AAAC,GAAG,GAAI,CAAA,GAAG,GAAG,GAAG,CAAA,GAAK,IAAI,AAAC;IACzC,OAAO;eAAE,KAAK;eAAE,KAAK;KAAE,CAAC;CACzB,AAAC;;;AC9BF,SAAS,yCAAS,CAAC,IAAiB,EAAE;IACpC,MAAM,QAAE,IAAI,CAAA,SAAE,KAAK,CAAA,OAAE,GAAG,CAAA,UAAE,MAAM,CAAA,EAAE,GAAG,IAAI,CAAC,qBAAqB,EAAE,AAAC;IAElE,OAAO;QACL,IAAI,EAAE,IAAI,GAAG,OAAO;eACpB,KAAK;QACL,GAAG,EAAE,GAAG,GAAG,OAAO;gBAClB,MAAM;KACP,CAAC;CACH;;;ACFD,2DAAgC;AACL,MAArB,yCAAgB,GAAG,CAAC,OACxB,GAAG,CAAA,WACH,OAAO,CAAA,OACP,GAAG,CAAA,QACH,IAAI,CAAA,cACJ,UAAU,CAAA,UACV,MAAM,CAAA,EACe,GAAK;IAC1B,IAAI,CAAC,UAAU,IAAI,MAAM,KAAK,MAAM,EAClC,OAAO,CAAC,CAAC;IAEX,MAAM,WAAW,GAAG,yCAAgB,CAAC;cAAE,IAAI;aAAE,GAAG;aAAE,GAAG;KAAE,CAAC,AAAC;IACzD,OAAO,AAAE,CAAA,OAAO,GAAG,GAAG,CAAA,GAAI,IAAI,GAAI,WAAW,CAAC;CAC/C,AAAC;AAEF,wDAA+B;AACN,MAAnB,yCAAgB,GAAG,CAAC,QAAE,IAAI,CAAA,OAAE,GAAG,CAAA,OAAE,GAAG,CAAA,EAAwB,GAAK,GAAG,GAAI,CAAA,AAAC,CAAA,GAAG,GAAG,GAAG,CAAA,GAAI,IAAI,CAAA,AAAC,AAAC;AAElG,+DAAkC;AAClC,MAAM,yCAAkB,GAAG,CAAC,QAC1B,IAAI,CAAA,OACJ,GAAG,CAAA,OACH,GAAG,CAAA,MACH,EAAE,CAAA,QACF,IAAI,CAAA,cACJ,UAAU,CAAA,EACe,GAAa;IACtC,MAAM,WAAW,GAAG,yCAAgB,CAAC;aAAE,GAAG;aAAE,GAAG;cAAE,IAAI;KAAE,CAAC,AAAC;IACzD,IAAI,CAAC,UAAU,EACb,OAAO,AAAE,CAAA,EAAE,GAAG,GAAG,CAAA,GAAI,IAAI,GAAI,WAAW,CAAC;IAE3C,OAAO,AAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,GAAI,WAAW,CAAC;CACnD,AAAC;AAEF,MAAM,yCAAgB,GAAG,CAAC,KAAoB,GAAK;IACjD,MAAM,QAAE,IAAI,CAAA,OAAE,GAAG,CAAA,OAAE,GAAG,CAAA,QAAE,IAAI,CAAA,MAAE,EAAE,CAAA,cAAE,UAAU,CAAA,EAAE,GAAG,KAAK,AAAC;IAEvD,MAAM,SAAS,GAAG,yCAAgB,CAAC;QACjC,OAAO,EAAE,IAAI;aACb,GAAG;aACH,GAAG;cACH,IAAI;oBACJ,UAAU;QACV,MAAM,EAAE,MAAM;KACf,CAAC,AAAC;IACH,MAAM,OAAO,GAAG,yCAAgB,CAAC;QAC/B,OAAO,EAAE,EAAE;aACX,GAAG;aACH,GAAG;cACH,IAAI;oBACJ,UAAU;QACV,MAAM,EAAE,IAAI;KACb,CAAC,AAAC;IACH,MAAM,aAAa,GAAG,yCAAkB,CAAC;cACvC,IAAI;aACJ,GAAG;aACH,GAAG;cACH,IAAI;YACJ,EAAE;oBACF,UAAU;KACX,CAAC,AAAC;IACH,OAAO;mBACL,SAAS;iBACT,OAAO;uBACP,aAAa;KACd,CAAC;CACH,AAAC;;;ACxEF,MAAM,oCAAc,GAAkB;IACpC,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,GAAG;IACR,IAAI,EAAE,EAAE;IACR,EAAE,EAAE,EAAE;IACN,IAAI,EAAE,CAAC;IACP,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,KAAK;IACjB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,IAAI;IACb,OAAO,EAAE,IAAI;IACb,aAAa,EAAE,IAAI;CACpB,AAAC;AAEF,MAAM,yCAAa,GAAG,CAAC,KAAoB,GAAwB;IACjE,MAAM,SAAS,GAAG;QAAE,GAAG,oCAAc;QAAE,GAAG,KAAK;KAAE,AAAC;IAClD,MAAM,OAAE,GAAG,CAAA,OAAE,GAAG,CAAA,QAAE,IAAI,CAAA,QAAE,IAAI,CAAA,MAAE,EAAE,CAAA,EAAE,GAAG,SAAS,AAAC;IAC/C,MAAM,yBAAyB,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,AAAC;IAC9D,MAAM,uBAAuB,GAAG,IAAI,IAAI,GAAG,AAAC;IAC5C,MAAM,qBAAqB,GAAG,EAAE,IAAI,GAAG,AAAC;IACxC,MAAM,kBAAkB,GAAG,IAAI,IAAI,EAAE,AAAC;IACtC,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAAC,AAAC;IAClC,IAAI,OAAO,GAAG,KAAK,AAAC;IACpB,IAAI,YAAY,GAAG,EAAE,AAAC;IACtB,IAAI;QACF,IAAI,CAAC,yBAAyB,EAC5B,MAAM,KAAK,CACT,gGAAgG,CACjG,CAAC;QAEJ,IAAI,CAAC,uBAAuB,EAC1B,MAAM,KAAK,CACT,iGAAiG,CAClG,CAAC;QAEJ,IAAI,CAAC,qBAAqB,EACxB,MAAM,KAAK,CACT,+FAA+F,CAChG,CAAC;QAEJ,IAAI,CAAC,kBAAkB,EACrB,MAAM,KAAK,CAAC,2CAA2C,CAAC,CAAC;QAE3D,IAAI,CAAC,gBAAgB,EACnB,MAAM,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAE5C,OAAO,GAAG,IAAI,CAAC;KAChB,CAAC,OAAO,CAAC,EAAE;QACV,YAAY,GAAG,AAAC,CAAC,CAAW,OAAO,CAAC;QACpC,OAAO,GAAG,KAAK,CAAC;KACjB,QAAS;QACR,OAAO;YAAC,OAAO;YAAE,YAAY;SAAC,CAAC;KAChC;CACF,AAAC;;;AbpCF,MAAM,+BAAS;IAWb,YAAY,WAAE,OAAO,CAAA,aAAE,SAAS,CAAA,EAAqB,CAAE;QACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,wCAAQ,CAAA,EAAE,CAAC;QAE/B,MAAM,cAAc,GAAkB;YACpC,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,EAAE;YACR,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,CAAC;YACP,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,KAAK;YACjB,UAAU,EAAE,KAAK;YACjB,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,IAAI;YACb,aAAa,EAAE,IAAI;SACpB,AAAC;QACF,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAE1C,IAAI,CAAC,KAAK,GAAG;YAAE,GAAG,cAAc;YAAE,GAAG,OAAO;SAAE,CAAC;QAE/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA,GAAA,wCAAK,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,eAAe,GAAG,IAAyB;QACzC,MAAM,iBAAE,aAAa,CAAA,aAAE,SAAS,CAAA,WAAE,OAAO,CAAA,EAAE,GAAG,CAAA,GAAA,yCAAgB,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,AAAC;QAC3E,OAAO;YAAE,gBAAgB,EAAE,aAAa;YAAE,KAAK,EAAE,OAAO;uBAAE,SAAS;SAAE,CAAC;KACvE,CAAC;IAEF,cAAc,GAAG,IAAmB;QAClC,MAAM,OAAE,GAAG,CAAA,OAAE,GAAG,CAAA,aAAE,SAAS,CAAA,EAAE,GAAG,IAAI,CAAC,KAAK,AAAC;QAC3C,MAAM,SAAE,KAAK,CAAA,SAAE,KAAK,CAAA,EAAE,GAAG,CAAA,GAAA,yCAAe,CAAA,CAAC;iBAAE,GAAG;iBAAE,GAAG;YAAE,IAAI,EAAE,SAAS;SAAE,CAAC,AAAC;QACxE,OAAO;mBAAE,KAAK;mBAAE,KAAK;SAAE,CAAC;KACzB,CAAC;IAEF,oBAAoB,GAAG,CAAC,CAAQ,GAAW;QACzC,IAAI,CAAE,CAAA,CAAC,CAAC,MAAM,YAAY,WAAW,CAAA,AAAC,EACpC,OAAO;QAGT,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,AAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KAC5B,CAAC;IAEF,oBAAoB,GAAG,CAAC,KAAmB,GAAK;QAC9C,MAAM,MAAM,GAAuB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,AAAC;QAC/E,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,eAAe,CAAC,AAAC;QAClE,IAAI,KAAK,CAAC,MAAM,KAAK,WAAW,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EACzD,OAAO;QAET,IAAI,CAAC,MAAM,EACT,OAAO;QAGT,MAAM,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,KAAK,CAAC,AAAC;QACrD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB,CAAC;IAEF,iBAAiB,GAAG,CAAC,KAAmB,GAAW;QACjD,IAAI,CAAE,CAAA,KAAK,CAAC,MAAM,YAAY,WAAW,CAAA,AAAC,EACxC,OAAO;QAGT,MAAM,OAAE,GAAG,CAAA,cAAE,UAAU,CAAA,MAAE,EAAE,CAAA,QAAE,IAAI,CAAA,EAAE,GAAG,IAAI,CAAC,KAAK,AAAC;QACjD,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,AAAC;QAC9B,MAAM,MAAM,GAAuB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,AAAC;QAE/E,IAAI,EAAE,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,EAAE;YAC9B,MAAM,cAAc,GAAuB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,kBAAkB,CAAC,AAAC;YAC5F,IAAI,CAAC,cAAc,EACjB,OAAO;YAET,UAAU,GAAG,cAAc,CAAC;SAC7B;QAED,MAAM,QAAQ,GAAG,UAAU,EAAE,OAAO,CAAC,MAAM,AAAC;QAE5C,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU,EACxB,OAAO;QAGT,MAAM,gBAAgB,GAAG,CAAA,GAAA,yCAAS,CAAA,CAAC,UAAU,CAAC,AAAC;QAE/C,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,gBAAgB,CAAC,IAAI,AAAC;QAChD,IAAI,UAAU,EACZ,0CAA0C;QAC1C,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,gBAAgB,CAAC,GAAG,CAAC;QAE7C,MAAM,sBAAsB,GAAG,CAAC,GAAiB,GAAK;YACpD,IAAI,MAAM,EACR,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;SAEhD,AAAC;QACF,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;QAEjE,iDAA2B;QAC3B,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAM;YAC3C,QAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE,sBAAsB,CAAC,CAAC;SACrE,CAAC,CAAC;KACJ,CAAC;IAEF,cAAc,GAAG,CAAC,KAAoB,GAAW;QAC/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,AAAC;QACzC,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,EAAE,AAAC;QAChD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;mBAAE,KAAK;wBAAE,UAAU;8BAAE,gBAAgB;SAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,YAAY;YACjC,YAAY,EAAE,IAAI,CAAC,KAAK;SACzB,CAAC,CAAC;KACJ,CAAC;IAEF,aAAa,GAAG,IAAY;QAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAClB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,gBAAgB;YACrC,QAAQ,EAAE,IAAI,CAAC,oBAAoB;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAClB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,aAAa;YAClC,QAAQ,EAAE,IAAI,CAAC,iBAAiB;SACjC,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAClB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,WAAW;YAChC,QAAQ,EAAE,IAAI,CAAC,oBAAoB;SACpC,CAAC,CAAC;KACJ,CAAC;IAEF,cAAc,GAAG,IAAM;QACrB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;YACnB,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,cAAc;YACnC,QAAQ,EAAE,IAAI,CAAC,cAAc;SAC9B,CAAC,CAAC;KACJ,CAAC;IAEF,QAAQ,GAAG,IAAM,IAAI,CAAC,KAAK,CAAC;IAE5B,QAAQ,GAAG,IAAM,IAAI,CAAC,KAAK,CAAC;IAE5B,UAAU,GAAG,IAAM;QACjB,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,EAAE,AAAC;QAC3C,MAAM,gBAAgB,GAAG,IAAI,CAAC,eAAe,EAAE,AAAC;QAEhD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA,GAAA,wCAAI,CAAA,CAAC;YACnB,OAAO,EAAE,IAAI,CAAC,KAAK;YACnB,SAAS,EAAE,IAAI,CAAC,SAAS;0BACzB,YAAY;8BACZ,gBAAgB;SACjB,CAAC,CAAC;KACJ,CAAC;IAEF,UAAU,GAAG,CAAC,OAA+B,GAAK;QAChD,MAAM,QAAQ,GAAkB;YAAE,GAAG,IAAI,CAAC,KAAK;YAAE,GAAG,OAAO;SAAE,AAAC;QAC9D,MAAM,CAAC,cAAc,EAAE,OAAO,CAAC,GAAG,CAAA,GAAA,yCAAa,CAAA,CAAC,QAAQ,CAAC,AAAC;QAE1D,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YAEtB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;gBACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,YAAY;gBAC9B,OAAO,EAAE;oBAAE,KAAK,EAAE,QAAQ;iBAAE;aAC7B,CAAC,CAAC;SACJ;QACD,IAAI,OAAO,EACT,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;KAExB,CAAC;IAEF,gBAAgB,GAAG,CAAC,GAAiB,EAAE,MAAmB,EAAE,QAA4B,GAAW;QACjG,MAAM,cAAE,UAAU,CAAA,EAAE,GAAG,IAAI,CAAC,KAAK,AAAC;QAElC,IAAI,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,AAAC;QAEjD,IAAI,UAAU,EAAE;YACd,IAAI,QAAQ,KAAK,CAAA,GAAA,yCAAc,CAAA,CAAC,EAAE,EAAE;gBAClC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EACzB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBAE1B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;oBACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;oBAC5B,OAAO,EAAE;+BAAE,KAAK;qBAAE;iBACnB,CAAC,CAAC;aACJ,MAAM,IAAI,QAAQ,KAAK,CAAA,GAAA,yCAAc,CAAA,CAAC,IAAI,EAAE;gBAC3C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,EACvB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;gBAExB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;oBACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,YAAY;oBAC9B,OAAO,EAAE;+BAAE,KAAK;qBAAE;iBACnB,CAAC,CAAC;aACJ;SACF,MACC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;YAC5B,OAAO,EAAE;uBAAE,KAAK;aAAE;SACnB,CAAC,CAAC;KAEN,CAAC;IAEF,WAAW,GAAG,CAAC,QAAgB,GAAK;QAClC,MAAM,QAAE,IAAI,CAAA,MAAE,EAAE,CAAA,cAAE,UAAU,CAAA,EAAE,GAAG,IAAI,CAAC,KAAK,AAAC;QAC5C,IAAI,UAAU,EAAE;YACd,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,AAAC;YAClD,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,QAAQ,CAAC,AAAC;YAE9C,IAAI,aAAa,GAAG,eAAe,EACjC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;gBACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;gBAC5B,OAAO,EAAE;oBAAE,KAAK,EAAE,QAAQ;iBAAE;aAC7B,CAAC,CAAC;iBACE,IAAI,aAAa,GAAG,eAAe,EACxC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;gBACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,YAAY;gBAC9B,OAAO,EAAE;oBAAE,KAAK,EAAE,QAAQ;iBAAE;aAC7B,CAAC,CAAC;iBACE,IAAI,eAAe,KAAK,aAAa;gBAC1C,IAAI,QAAQ,GAAG,EAAE,EACf,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;oBACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,YAAY;oBAC9B,OAAO,EAAE;wBAAE,KAAK,EAAE,QAAQ;qBAAE;iBAC7B,CAAC,CAAC;qBAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;oBACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;oBAC5B,OAAO,EAAE;wBAAE,KAAK,EAAE,QAAQ;qBAAE;iBAC7B,CAAC,CAAC;aAEN;SACF,MACC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YACrB,IAAI,EAAE,CAAA,GAAA,yCAAW,CAAA,CAAC,UAAU;YAC5B,OAAO,EAAE;gBAAE,KAAK,EAAE,QAAQ;aAAE;SAC7B,CAAC,CAAC;KAEN,CAAC;IAEF,kBAAkB,GAAG,CAAC,MAAmB,EAAE,KAAmB,GAAa;QACzE,MAAM,cAAE,UAAU,CAAA,OAAE,GAAG,CAAA,OAAE,GAAG,CAAA,QAAE,IAAI,CAAA,EAAE,GAAG,IAAI,CAAC,KAAK,AAAC;QAClD,MAAM,YAAY,GAAG,CAAA,GAAA,yCAAS,CAAA,CAAC,MAAM,CAAC,AAAC;QACvC,IAAI,IAAI,GAAG,AAAE,CAAA,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,GAAG,CAAA,GAAI,YAAY,CAAC,MAAM,GAAI,GAAG,AAAC;QAC1E,IAAI,CAAC,UAAU,EACb,IAAI,GAAG,AAAE,CAAA,KAAK,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAA,GAAI,YAAY,CAAC,KAAK,GAAI,GAAG,CAAC;QAExE,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;QACvB,IAAI,IAAI,GAAG,GAAG,EAAE,IAAI,GAAG,GAAG,CAAC;QAE3B,MAAM,SAAS,GAAG,AAAC,CAAA,GAAG,GAAG,GAAG,CAAA,GAAI,IAAI,AAAC;QACrC,MAAM,WAAW,GAAG,GAAG,GAAG,SAAS,AAAC;QACpC,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,WAAW,AAAC;QAE3D,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;QAC/B,IAAI,QAAQ,GAAG,GAAG,EAAE,QAAQ,GAAG,GAAG,CAAC;QAEnC,MAAM,QAAQ,GAAG,CAAA,GAAA,yCAAkB,CAAA,CAAC,IAAI,CAAC,AAAC;QAE1C,MAAM,MAAM,GAAG,MAAM,CAAC,AAAC,CAAA,AAAC,QAAQ,GAAG,WAAW,GAAI,IAAI,CAAA,CAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,AAAC;QAC3E,MAAM,KAAK,GAAG,MAAM,CAAC,AAAC,CAAA,MAAM,GAAG,GAAG,CAAA,CAAE,OAAO,CAAC,QAAQ,CAAC,CAAC,AAAC;QACvD,OAAO,KAAK,CAAC;KACd,CAAC;IAEF,SAAS,GAAG,CAAC,GAAM,GAAK;QACtB,MAAM,UAAU,GAAgB;YAC9B,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,YAAY;YACjC,QAAQ,EAAE,GAAE;SACb,AAAC;QACF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;KACrC,CAAC;IAEF,WAAW,GAAG,CAAC,GAAM,GAAK;QACxB,MAAM,UAAU,GAAgB;YAC9B,SAAS,EAAE,CAAA,GAAA,yCAAS,CAAA,CAAC,YAAY;YACjC,QAAQ,EAAE,GAAE;SACb,AAAC;QACF,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;KACvC,CAAC;CACH;IAED,wCAAyB,GAAV,+BAAS;;;;;ADpTvB,CAAA,SAAS,SAAS,CAAC,EAAC,EAAE;IACrB,EAAC,CAAC,EAAE,CAAC,MAAM,GAAG,SAAS,YAAY,CAAC,OAAsB,EAAE;QAC1D,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EACV,OAAO;QAET,MAAM,OAAO,GAAG,CAAA,GAAA,yCAAa,CAAA,CAAC,OAAO,CAAC,AAAC;QACvC,IAAI,OAAO,EACT,OAAO,IAAI,CAAA,GAAA,wCAAS,CAAA,CAAC;qBAAE,OAAO;YAAE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;SAAE,CAAC,CAAC;QAExD,MAAM,KAAK,CAAC,sBAAsB,CAAC,CAAC;KACrC,CAAC;CACH,CAAA,CAAE,CAAA,GAAA,aAAC,CAAA,CAAC,CAAC","sources":["src/slider/slider.ts","src/slider/layers/presenter/presenter.ts","src/slider/layers/interfaces/interfaces.ts","src/slider/layers/model/model.ts","src/slider/layers/observer/observer.ts","src/slider/layers/view/view.ts","src/slider/layers/view/components/lineBlock/lineBlock.ts","src/slider/layers/view/components/handle/handle.ts","src/slider/layers/view/components/label/label.ts","src/slider/layers/view/components/progressBar/progressBar.ts","src/slider/layers/view/components/scale/scale.ts","src/slider/layers/presenter/utils/scale.ts","src/slider/layers/presenter/utils/handle.ts","src/slider/layers/presenter/utils/lineBlock.ts","src/slider/layers/presenter/utils/validateModelOption.ts"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport $ from 'jquery';\r\n\r\nimport { IModelOptions } from './layers/interfaces/interfaces';\r\nimport Presenter from './layers/presenter/presenter';\r\nimport { validateModel } from './layers/presenter/utils/validateModelOption';\r\nimport './slider.scss';\r\n\r\n(function sliderMVP($) {\r\n  $.fn.slider = function JQuerySlider(options: IModelOptions) {\r\n    if (!this[0]) {\r\n      return;\r\n    }\r\n    const isValid = validateModel(options);\r\n    if (isValid) {\r\n      return new Presenter({ options, container: this[0] });\r\n    }\r\n    throw Error('Options is not valid');\r\n  };\r\n})($);\r\n\r\ndeclare global {\r\n  interface JQuery {\r\n    slider(options: Partial<IModelOptions>): Presenter | undefined;\r\n  }\r\n}\r\n","import {\r\n  EventName,\r\n  fn,\r\n  HandlePosition,\r\n  ILineBlockOptions,\r\n  IModelOptions,\r\n  IPresenterOptions,\r\n  IScaleProps,\r\n  ISubscriber,\r\n  ModelAction,\r\n} from '../interfaces/interfaces';\r\nimport Model from '../model/model';\r\nimport View from '../view/view';\r\nimport Observer from '../observer/observer';\r\nimport { arrScaleCreator, countValueRounding } from './utils/scale';\r\nimport { getCoords } from './utils/handle';\r\nimport { lineBlockCreator } from './utils/lineBlock';\r\nimport { validateModel } from './utils/validateModelOption';\r\n\r\nclass Presenter {\r\n  private model: Model;\r\n\r\n  private view: View;\r\n\r\n  private state: IModelOptions;\r\n\r\n  private container: HTMLElement;\r\n\r\n  private observer: Observer;\r\n\r\n  constructor({ options, container }: IPresenterOptions) {\r\n    this.observer = new Observer();\r\n\r\n    const defaultOptions: IModelOptions = {\r\n      min: 0,\r\n      max: 100,\r\n      from: 20,\r\n      to: 30,\r\n      step: 1,\r\n      stepScale: 1,\r\n      isVertical: false,\r\n      isInterval: false,\r\n      isLabel: true,\r\n      isScale: true,\r\n      isProgressBar: true,\r\n    };\r\n    this.container = container;\r\n    this.container.classList.add('js-slider');\r\n\r\n    this.state = { ...defaultOptions, ...options };\r\n\r\n    this.model = new Model(this.state);\r\n\r\n    this.createView();\r\n    this.subscribeView();\r\n    this.subscribeModel();\r\n  }\r\n\r\n  createLineBlock = (): ILineBlockOptions => {\r\n    const { progressWidth, shiftFrom, shiftTo } = lineBlockCreator(this.state);\r\n    return { progressBarWidth: progressWidth, shift: shiftTo, shiftFrom };\r\n  };\r\n\r\n  createArrScale = (): IScaleProps => {\r\n    const { max, min, stepScale } = this.state;\r\n    const { scale, shift } = arrScaleCreator({ max, min, step: stepScale });\r\n    return { scale, shift };\r\n  };\r\n\r\n  handleScaleItemClick = (e: Event): void => {\r\n    if (!(e.target instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const newValue = Number(e.target?.textContent);\r\n    this.updateModel(newValue);\r\n  };\r\n\r\n  handleLineBlockClick = (event: PointerEvent) => {\r\n    const slider: HTMLElement | null = this.container.querySelector('.line-block');\r\n    const progressbar = this.container.querySelector('.progress-bar');\r\n    if (event.target !== progressbar && event.target !== slider) {\r\n      return;\r\n    }\r\n    if (!slider) {\r\n      return;\r\n    }\r\n\r\n    const value = this.countValueForModel(slider, event);\r\n    this.updateModel(value);\r\n  };\r\n\r\n  handleHandleClick = (event: PointerEvent): void => {\r\n    if (!(event.target instanceof HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    const { min, isVertical, to, from } = this.state;\r\n    let sliderSpan = event.target;\r\n    const slider: HTMLElement | null = this.container.querySelector('.line-block');\r\n\r\n    if (to === min && from === min) {\r\n      const sliderSpanNode: HTMLElement | null = this.container.querySelector('[data-handle=to]');\r\n      if (!sliderSpanNode) {\r\n        return;\r\n      }\r\n      sliderSpan = sliderSpanNode;\r\n    }\r\n\r\n    const position = sliderSpan?.dataset.handle;\r\n\r\n    if (!slider || !sliderSpan) {\r\n      return;\r\n    }\r\n\r\n    const sliderSpanCoords = getCoords(sliderSpan);\r\n\r\n    let shift = event.pageX - sliderSpanCoords.left;\r\n    if (isVertical) {\r\n      // eslint-disable-next-line no-unused-vars\r\n      shift = event.pageY - sliderSpanCoords.top;\r\n    }\r\n    const handleHandlerMouseMove = (evt: PointerEvent) => {\r\n      if (slider) {\r\n        this.handleHandleMove(evt, slider, position);\r\n      }\r\n    };\r\n    document.addEventListener('pointermove', handleHandlerMouseMove);\r\n\r\n    // Начнем движение ползунка\r\n    document.addEventListener('pointerup', () => {\r\n      document.removeEventListener('pointermove', handleHandlerMouseMove);\r\n    });\r\n  };\r\n\r\n  modelWasUpdate = (model: IModelOptions): void => {\r\n    this.state = model;\r\n    const scaleProps = this.createArrScale();\r\n    const lineBlockOptions = this.createLineBlock();\r\n    this.view.updateView({ model, scaleProps, lineBlockOptions });\r\n    this.observer.notify({\r\n      eventName: EventName.sliderChange,\r\n      eventPayload: this.state,\r\n    });\r\n  };\r\n\r\n  subscribeView = (): void => {\r\n    this.view.subscribe({\r\n      eventName: EventName.clickedScaleItem,\r\n      function: this.handleScaleItemClick,\r\n    });\r\n\r\n    this.view.subscribe({\r\n      eventName: EventName.clickedHandle,\r\n      function: this.handleHandleClick,\r\n    });\r\n\r\n    this.view.subscribe({\r\n      eventName: EventName.clickedLine,\r\n      function: this.handleLineBlockClick,\r\n    });\r\n  };\r\n\r\n  subscribeModel = () => {\r\n    this.model.subscribe({\r\n      eventName: EventName.modelWasUpdate,\r\n      function: this.modelWasUpdate,\r\n    });\r\n  };\r\n\r\n  getModel = () => this.model;\r\n\r\n  getState = () => this.state;\r\n\r\n  createView = () => {\r\n    const scaleOptions = this.createArrScale();\r\n    const lineBlockOptions = this.createLineBlock();\r\n\r\n    this.view = new View({\r\n      options: this.state,\r\n      container: this.container,\r\n      scaleOptions,\r\n      lineBlockOptions,\r\n    });\r\n  };\r\n\r\n  fullUpdate = (options: Partial<IModelOptions>) => {\r\n    const newState: IModelOptions = { ...this.state, ...options };\r\n    const [isOptionsValid, message] = validateModel(newState);\r\n\r\n    if (isOptionsValid) {\r\n      this.state = newState;\r\n\r\n      this.container.innerHTML = '';\r\n      this.createView();\r\n      this.subscribeView();\r\n\r\n      this.model.updateState({\r\n        type: ModelAction.setFullState,\r\n        payload: { value: newState },\r\n      });\r\n    }\r\n    if (message) {\r\n      throw Error(message);\r\n    }\r\n  };\r\n\r\n  handleHandleMove = (evt: PointerEvent, slider: HTMLElement, position: string | undefined): void => {\r\n    const { isInterval } = this.state;\r\n\r\n    let value = this.countValueForModel(slider, evt);\r\n\r\n    if (isInterval) {\r\n      if (position === HandlePosition.to) {\r\n        if (value < this.state.from) {\r\n          value = this.state.from;\r\n        }\r\n        this.model.updateState({\r\n          type: ModelAction.setToValue,\r\n          payload: { value },\r\n        });\r\n      } else if (position === HandlePosition.from) {\r\n        if (value > this.state.to) {\r\n          value = this.state.to;\r\n        }\r\n        this.model.updateState({\r\n          type: ModelAction.setFromValue,\r\n          payload: { value },\r\n        });\r\n      }\r\n    } else {\r\n      this.model.updateState({\r\n        type: ModelAction.setToValue,\r\n        payload: { value },\r\n      });\r\n    }\r\n  };\r\n\r\n  updateModel = (newValue: number) => {\r\n    const { from, to, isInterval } = this.state;\r\n    if (isInterval) {\r\n      const difFromNewValue = Math.abs(from - newValue);\r\n      const difToNewValue = Math.abs(to - newValue);\r\n\r\n      if (difToNewValue < difFromNewValue) {\r\n        this.model.updateState({\r\n          type: ModelAction.setToValue,\r\n          payload: { value: newValue },\r\n        });\r\n      } else if (difToNewValue > difFromNewValue) {\r\n        this.model.updateState({\r\n          type: ModelAction.setFromValue,\r\n          payload: { value: newValue },\r\n        });\r\n      } else if (difFromNewValue === difToNewValue) {\r\n        if (newValue < to) {\r\n          this.model.updateState({\r\n            type: ModelAction.setFromValue,\r\n            payload: { value: newValue },\r\n          });\r\n        } else {\r\n          this.model.updateState({\r\n            type: ModelAction.setToValue,\r\n            payload: { value: newValue },\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      this.model.updateState({\r\n        type: ModelAction.setToValue,\r\n        payload: { value: newValue },\r\n      });\r\n    }\r\n  };\r\n\r\n  countValueForModel = (slider: HTMLElement, event: PointerEvent): number => {\r\n    const { isVertical, max, min, step } = this.state;\r\n    const sliderCoords = getCoords(slider);\r\n    let left = ((event.pageY - sliderCoords.top) / sliderCoords.height) * 100;\r\n    if (!isVertical) {\r\n      left = ((event.pageX - sliderCoords.left) / sliderCoords.width) * 100;\r\n    }\r\n    if (left < 0) left = 0;\r\n    if (left > 100) left = 100;\r\n\r\n    const stepCount = (max - min) / step;\r\n    const stepPercent = 100 / stepCount;\r\n    let stepLeft = Math.ceil(left / stepPercent) * stepPercent;\r\n\r\n    if (stepLeft < 0) stepLeft = 0;\r\n    if (stepLeft > 100) stepLeft = 100;\r\n\r\n    const valueFix = countValueRounding(step);\r\n\r\n    const result = Number(((stepLeft / stepPercent) * step).toFixed(valueFix));\r\n    const value = Number((result + min).toFixed(valueFix));\r\n    return value;\r\n  };\r\n\r\n  subscribe = (fn: fn) => {\r\n    const subscriber: ISubscriber = {\r\n      eventName: EventName.sliderChange,\r\n      function: fn,\r\n    };\r\n    this.observer.subscribe(subscriber);\r\n  };\r\n\r\n  unsubscribe = (fn: fn) => {\r\n    const subscriber: ISubscriber = {\r\n      eventName: EventName.sliderChange,\r\n      function: fn,\r\n    };\r\n    this.observer.unsubscribe(subscriber);\r\n  };\r\n}\r\n\r\nexport default Presenter;\r\n","import Observer from '../observer/observer';\r\n\r\ninterface IModelOptions {\r\n  min: number;\r\n  max: number;\r\n  from: number;\r\n  to: number;\r\n  step: number;\r\n  stepScale: number;\r\n  isVertical: boolean;\r\n  isInterval: boolean;\r\n  isLabel: boolean;\r\n  isScale: boolean;\r\n  isProgressBar: boolean;\r\n}\r\n\r\nenum ModelAction {\r\n  'setMinValue',\r\n  'setMaxValue',\r\n  'setFromValue',\r\n  'setToValue',\r\n  'setStep',\r\n  'setStepScale',\r\n  'setIsVertical',\r\n  'setIsInterval',\r\n  'setIsLabel',\r\n  'setIsProgressBar',\r\n  'setIsScale',\r\n  'setFullState',\r\n}\r\n\r\ninterface IModelAction {\r\n  type: ModelAction;\r\n  payload: {\r\n    value: number | boolean | IModelOptions;\r\n  };\r\n}\r\n\r\ninterface IPresenterOptions {\r\n  container: HTMLElement;\r\n  options: IModelOptions;\r\n}\r\n\r\ninterface IScaleProps {\r\n  scale: number[];\r\n  shift: number;\r\n}\r\n\r\ninterface IViewOptions {\r\n  container: HTMLElement;\r\n  options: IModelOptions;\r\n  scaleOptions: IScaleProps;\r\n  lineBlockOptions: ILineBlockOptions;\r\n}\r\n\r\ninterface ILineBlockOptions {\r\n  shift: number;\r\n  shiftFrom: number;\r\n  progressBarWidth: number;\r\n}\r\n\r\ninterface ILineBlockProps {\r\n  container: HTMLElement;\r\n  model: IModelOptions;\r\n  observer: Observer;\r\n  options: ILineBlockOptions;\r\n}\r\n\r\ninterface IObserver {\r\n  subscribe: (subscriber: ISubscriber) => void;\r\n  unsubscribe: (subscriber: ISubscriber) => void;\r\n  notify: (eventObject: IEventObject) => void;\r\n}\r\n\r\nenum EventName {\r\n  clickedScaleItem = 'clickedScaleItem',\r\n  modelWasUpdate = 'modelWasUpdate',\r\n  clickedHandle = 'clickedHandle',\r\n  clickedLine = 'clickedLine',\r\n  sliderChange = 'sliderChange',\r\n}\r\n\r\ntype fn = (e: IModelOptions) => void;\r\n\r\ninterface ISubscriber {\r\n  eventName: EventName;\r\n  function: (e: Event | IModelOptions) => void;\r\n}\r\n\r\ninterface IEventObject {\r\n  eventName: EventName;\r\n  eventPayload: Event | IModelOptions;\r\n}\r\n\r\ninterface IScaleOptions {\r\n  container: HTMLElement;\r\n  arrayScale: number[];\r\n  shift: number;\r\n  observer: Observer;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface IViewInitProps {\r\n  scaleOptions: IScaleProps;\r\n  lineBlockOptions: ILineBlockOptions;\r\n}\r\n\r\ninterface IUpdateViewProps {\r\n  model: IModelOptions;\r\n  scaleProps: IScaleProps;\r\n  lineBlockOptions: ILineBlockOptions;\r\n}\r\n\r\ninterface ICreateArrScale {\r\n  max: number;\r\n  min: number;\r\n  step: number;\r\n}\r\n\r\ninterface IProgressBarOptions {\r\n  container: HTMLElement;\r\n  shiftFrom: number;\r\n  width: number;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface ICountShiftFromProps {\r\n  min: number;\r\n  current: number;\r\n  step: number;\r\n  max: number;\r\n  isInterval: boolean;\r\n  handle: 'from' | 'to';\r\n}\r\n\r\ninterface ICountShiftToProps {\r\n  min: number;\r\n  step: number;\r\n  max: number;\r\n  to: number;\r\n}\r\n\r\ninterface ICountProgressWidthProps {\r\n  step: number;\r\n  max: number;\r\n  min: number;\r\n  to: number;\r\n  from: number;\r\n  isInterval: boolean;\r\n}\r\n\r\ninterface IProgressBarUpdateProps {\r\n  shiftFrom: number;\r\n  width: number;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface ICountStepPixelProps {\r\n  step: number;\r\n  max: number;\r\n  min: number;\r\n}\r\n\r\nenum HandlePosition {\r\n  from = 'from',\r\n  to = 'to',\r\n}\r\n\r\ninterface IHandleProps {\r\n  container: HTMLElement;\r\n  shift: number;\r\n  observer: Observer;\r\n  handlePosition?: HandlePosition;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface ILabelProps {\r\n  container: HTMLElement;\r\n  shift: number;\r\n  text: number;\r\n  isVertical: boolean;\r\n}\r\n\r\nexport {\r\n  IModelOptions,\r\n  ModelAction,\r\n  IPresenterOptions,\r\n  IViewOptions,\r\n  ILineBlockOptions,\r\n  ILineBlockProps,\r\n  IModelAction,\r\n  IObserver,\r\n  ISubscriber,\r\n  IEventObject,\r\n  IScaleOptions,\r\n  IViewInitProps,\r\n  IUpdateViewProps,\r\n  ICreateArrScale,\r\n  IProgressBarOptions,\r\n  ICountShiftFromProps,\r\n  ICountShiftToProps,\r\n  ICountProgressWidthProps,\r\n  IProgressBarUpdateProps,\r\n  ICountStepPixelProps,\r\n  HandlePosition,\r\n  IHandleProps,\r\n  ILabelProps,\r\n  IScaleProps,\r\n  EventName,\r\n  fn,\r\n};\r\n","import {\r\n  IModelOptions,\r\n  ModelAction,\r\n  IModelAction,\r\n  IObserver,\r\n  ISubscriber,\r\n  EventName,\r\n} from '../interfaces/interfaces';\r\nimport Observer from '../observer/observer';\r\n\r\nexport default class Model {\r\n  private minValue: number;\r\n\r\n  private maxValue: number;\r\n\r\n  private fromValue: number;\r\n\r\n  private toValue: number;\r\n\r\n  private step: number;\r\n\r\n  private stepScale: number;\r\n\r\n  private isVertical: boolean;\r\n\r\n  private isInterval: boolean;\r\n\r\n  private isLabel: boolean;\r\n\r\n  private isScale: boolean;\r\n\r\n  private isProgressBar: boolean;\r\n\r\n  public observer: IObserver = new Observer();\r\n\r\n  constructor(options: IModelOptions) {\r\n    const {\r\n      min,\r\n      max,\r\n      from,\r\n      to,\r\n      step,\r\n      stepScale,\r\n      isVertical,\r\n      isInterval,\r\n      isLabel,\r\n      isScale,\r\n      isProgressBar,\r\n    } = options;\r\n\r\n    this.minValue = min;\r\n    this.maxValue = max;\r\n    this.fromValue = from;\r\n    this.toValue = to;\r\n    this.step = step;\r\n    this.stepScale = stepScale;\r\n    this.isVertical = isVertical;\r\n    this.isInterval = isInterval;\r\n    this.isLabel = isLabel;\r\n    this.isScale = isScale;\r\n    this.isProgressBar = isProgressBar;\r\n  }\r\n\r\n  updateState = ({ type, payload }: IModelAction): void => {\r\n    if (typeof payload.value === 'number') {\r\n      switch (type) {\r\n        case ModelAction.setMinValue:\r\n          this.minValue = payload.value;\r\n          break;\r\n        case ModelAction.setMaxValue:\r\n          this.maxValue = payload.value;\r\n          break;\r\n        case ModelAction.setFromValue:\r\n          this.fromValue = payload.value;\r\n          break;\r\n        case ModelAction.setToValue:\r\n          this.toValue = payload.value;\r\n          break;\r\n        case ModelAction.setStep:\r\n          this.step = payload.value;\r\n          break;\r\n        case ModelAction.setStepScale:\r\n          this.stepScale = payload.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.observer.notify({\r\n        eventName: EventName.modelWasUpdate,\r\n        eventPayload: this.getState(),\r\n      });\r\n    } else if (typeof payload.value === 'boolean') {\r\n      switch (type) {\r\n        case ModelAction.setIsVertical:\r\n          this.isVertical = payload.value;\r\n          break;\r\n        case ModelAction.setIsInterval:\r\n          this.isInterval = payload.value;\r\n          break;\r\n        case ModelAction.setIsLabel:\r\n          this.isLabel = payload.value;\r\n          break;\r\n        case ModelAction.setIsProgressBar:\r\n          this.isProgressBar = payload.value;\r\n          break;\r\n        case ModelAction.setIsScale:\r\n          this.isScale = payload.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.observer.notify({\r\n        eventName: EventName.modelWasUpdate,\r\n        eventPayload: this.getState(),\r\n      });\r\n    } else if (typeof payload.value === 'object') {\r\n      switch (type) {\r\n        case ModelAction.setFullState:\r\n          this.minValue = payload.value.min;\r\n          this.maxValue = payload.value.max;\r\n          this.fromValue = payload.value.from;\r\n          this.toValue = payload.value.to;\r\n          this.step = payload.value.step;\r\n          this.stepScale = payload.value.stepScale;\r\n          this.isVertical = payload.value.isVertical;\r\n          this.isInterval = payload.value.isInterval;\r\n          this.isLabel = payload.value.isLabel;\r\n          this.isScale = payload.value.isScale;\r\n          this.isProgressBar = payload.value.isProgressBar;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.observer.notify({\r\n        eventName: EventName.modelWasUpdate,\r\n        eventPayload: this.getState(),\r\n      });\r\n    }\r\n  };\r\n\r\n  public subscribe = (subscriber: ISubscriber) => {\r\n    this.observer.subscribe(subscriber);\r\n  };\r\n\r\n  public getState = (): IModelOptions => ({\r\n    from: this.fromValue,\r\n    isInterval: this.isInterval,\r\n    isLabel: this.isLabel,\r\n    isProgressBar: this.isProgressBar,\r\n    isScale: this.isScale,\r\n    isVertical: this.isVertical,\r\n    max: this.maxValue,\r\n    min: this.minValue,\r\n    step: this.step,\r\n    stepScale: this.stepScale,\r\n    to: this.toValue,\r\n  });\r\n}\r\n","import { IEventObject, IObserver, ISubscriber } from '../interfaces/interfaces';\r\n\r\nclass Observer implements IObserver {\r\n  public subscribers: ISubscriber[];\r\n\r\n  constructor() {\r\n    this.subscribers = [];\r\n  }\n\r\n  subscribe = (subscriber: ISubscriber): void => {\r\n    this.subscribers.push(subscriber);\r\n  };\n\r\n  unsubscribe = (subscriber: ISubscriber): void => {\r\n    this.subscribers = this.subscribers.filter((el) => el !== subscriber);\r\n  };\n\r\n  notify = (eventObject: IEventObject): void => {\r\n    this.subscribers.forEach((el) =>\r\n      el.eventName === eventObject.eventName ? el.function(eventObject.eventPayload) : null,\r\n    );\r\n  };\r\n}\r\n\r\nexport default Observer;\r\n","import {\r\n  IModelOptions,\r\n  IScaleOptions,\r\n  ISubscriber,\r\n  IUpdateViewProps,\r\n  IViewInitProps,\r\n  IViewOptions,\r\n} from '../interfaces/interfaces';\r\nimport Observer from '../observer/observer';\r\nimport LineBlock from './components/lineBlock/lineBlock';\r\nimport Scale from './components/scale/scale';\r\n\r\nclass View {\r\n  private container: HTMLElement;\r\n\r\n  private options: IModelOptions;\r\n\r\n  public observer: Observer;\r\n\r\n  private slider: LineBlock;\r\n\r\n  private scale: Scale;\r\n\r\n  private isVertical: boolean;\r\n\r\n  constructor({ options, container, scaleOptions, lineBlockOptions }: IViewOptions) {\r\n    this.container = container;\r\n    this.options = options;\r\n    this.observer = new Observer();\r\n    this.isVertical = options.isVertical;\r\n    this.init({ scaleOptions, lineBlockOptions });\r\n  }\r\n\r\n  private init = ({ scaleOptions, lineBlockOptions }: IViewInitProps) => {\r\n    this.slider = new LineBlock({\r\n      container: this.container,\r\n      model: this.options,\r\n      observer: this.observer,\r\n      options: lineBlockOptions,\r\n    });\r\n    if (this.options.isScale) {\r\n      const scaleProps: IScaleOptions = {\r\n        container: this.container,\r\n        arrayScale: scaleOptions.scale,\r\n        shift: scaleOptions.shift,\r\n        observer: this.observer,\r\n        isVertical: this.isVertical,\r\n      };\r\n      this.scale = new Scale(scaleProps);\r\n    }\r\n  };\r\n\r\n  public updateView = ({ model, scaleProps, lineBlockOptions }: IUpdateViewProps) => {\r\n    this.slider.update(model, lineBlockOptions);\r\n    if (model.isScale) {\r\n      this.scale.update(scaleProps);\r\n    }\r\n  };\r\n\r\n  public subscribe = (subscriber: ISubscriber) => {\r\n    this.observer.subscribe(subscriber);\r\n  };\r\n}\r\n\r\nexport default View;\r\n","import {\r\n  EventName,\r\n  HandlePosition,\r\n  ILineBlockOptions,\r\n  ILineBlockProps,\r\n  IModelOptions,\r\n  IProgressBarOptions,\r\n} from '../../../interfaces/interfaces';\r\nimport Observer from '../../../observer/observer';\r\nimport Handle from '../handle/handle';\r\nimport Label from '../label/label';\r\nimport ProgressBar from '../progressBar/progressBar';\r\nimport './lineBlock.scss';\r\n\r\nclass LineBlock {\r\n  private container: HTMLElement;\n\r\n  private state;\n\r\n  private progressBar: ProgressBar;\n\r\n  private labelTo: Label;\n\r\n  private labelFrom: Label;\n\r\n  private handleTo: Handle;\n\r\n  private handleFrom: Handle;\n\r\n  private observer: Observer;\r\n\r\n  constructor(lineOptions: ILineBlockProps) {\r\n    const { container, model, observer, options } = lineOptions;\r\n    this.container = container;\r\n    this.state = model;\r\n    this.observer = observer;\r\n    this.init(options);\r\n  }\r\n\r\n  private init = (options: ILineBlockOptions) => {\r\n    const { progressBarWidth, shift, shiftFrom } = options;\r\n    const lineBlock = document.createElement('div');\r\n    const activeBlock = document.createElement('div');\r\n\r\n    const { to, from } = this.state;\r\n\r\n    lineBlock.classList.add('line-block');\r\n    this.container.setAttribute('data-isvertical', String(this.state.isVertical));\r\n    activeBlock.classList.add('line-block__active');\r\n    lineBlock.addEventListener('pointerdown', (e) =>\r\n      this.observer.notify({\r\n        eventName: EventName.clickedLine,\r\n        eventPayload: e,\r\n      }),\r\n    );\r\n\r\n    if (this.state.isInterval) {\r\n      this.handleTo = new Handle({\r\n        container: activeBlock,\r\n        shift,\r\n        observer: this.observer,\r\n        handlePosition: HandlePosition.to,\r\n        isVertical: this.state.isVertical,\r\n      });\r\n      if (this.state.isLabel) {\r\n        this.labelTo = new Label({\r\n          container: activeBlock,\r\n          shift,\r\n          text: to,\r\n          isVertical: this.state.isVertical,\r\n        });\r\n      }\r\n\r\n      this.handleFrom = new Handle({\r\n        container: activeBlock,\r\n        shift: shiftFrom,\r\n        observer: this.observer,\r\n        handlePosition: HandlePosition.from,\r\n        isVertical: this.state.isVertical,\r\n      });\r\n\r\n      if (this.state.isLabel) {\r\n        this.labelFrom = new Label({\r\n          container: activeBlock,\r\n          shift: shiftFrom,\r\n          text: from,\r\n          isVertical: this.state.isVertical,\r\n        });\r\n      }\r\n    } else {\r\n      this.handleTo = new Handle({\r\n        container: activeBlock,\r\n        shift,\r\n        observer: this.observer,\r\n        isVertical: this.state.isVertical,\r\n      });\r\n      if (this.state.isLabel) {\r\n        this.labelTo = new Label({\r\n          container: activeBlock,\r\n          shift,\r\n          text: to,\r\n          isVertical: this.state.isVertical,\r\n        });\r\n      }\r\n    }\r\n\r\n    lineBlock.append(activeBlock);\r\n\r\n    const ProgressBarOptions: IProgressBarOptions = {\r\n      container: lineBlock,\r\n      shiftFrom,\r\n      width: progressBarWidth,\r\n      isVertical: this.state.isVertical,\r\n    };\r\n    if (this.state.isProgressBar) {\r\n      this.progressBar = new ProgressBar(ProgressBarOptions);\r\n    }\r\n\r\n    if (this.container) {\r\n      this.container.append(lineBlock);\r\n    }\r\n  };\r\n\r\n  public update = (model: IModelOptions, options: ILineBlockOptions) => {\r\n    const { from, to, isInterval, isLabel, isVertical } = model;\r\n    const { progressBarWidth, shift, shiftFrom } = options;\r\n\r\n    if (isLabel) {\r\n      this.labelTo.update(to, shift);\r\n    }\r\n    if (isInterval) {\r\n      this.handleFrom.update(shiftFrom, isVertical);\r\n      if (isLabel) {\r\n        this.labelFrom.update(from, shiftFrom);\r\n      }\r\n    }\r\n    if (isVertical) {\r\n      this.handleTo.update(shift, isVertical);\r\n    } else {\r\n      this.handleTo.update(shift);\r\n    }\r\n    if (this.state.isProgressBar) {\r\n      this.progressBar.update({\r\n        shiftFrom,\r\n        width: progressBarWidth,\r\n        isVertical: this.state.isVertical,\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport default LineBlock;\r\n","import { EventName, HandlePosition, IHandleProps } from '../../../interfaces/interfaces';\r\nimport Observer from '../../../observer/observer';\r\nimport './handle.scss';\r\n\r\nclass Handle {\r\n  private container: HTMLElement;\r\n\r\n  private shift: number;\r\n\r\n  private isVertical: boolean;\r\n\r\n  private handle: HTMLElement;\r\n\r\n  private observer: Observer;\r\n\r\n  private handlePosition: HandlePosition | undefined;\r\n\r\n  constructor({ container, shift, observer, handlePosition, isVertical }: IHandleProps) {\r\n    this.container = container;\r\n    this.shift = shift;\r\n    this.observer = observer;\r\n    this.handlePosition = handlePosition;\r\n    this.isVertical = isVertical;\r\n    this.render();\r\n  }\r\n\r\n  private render = () => {\r\n    const handle = document.createElement('div');\r\n    handle.classList.add('handler');\r\n    if (this.handlePosition) {\r\n      handle.dataset.handle = this.handlePosition;\r\n    }\r\n    this.handle = handle;\r\n    this.container.append(handle);\r\n    this.handle.addEventListener('pointerdown', (e: PointerEvent) => this.handleHandleClick(e));\r\n    this.update(this.shift, this.isVertical);\r\n  };\r\n\r\n  private handleHandleClick = (event: PointerEvent) => {\r\n    this.observer.notify({\r\n      eventName: EventName.clickedHandle,\r\n      eventPayload: event,\r\n    });\r\n  };\r\n\r\n  public update = (value: number, isVertical: boolean = false) => {\r\n    this.shift = value;\r\n    this.isVertical = isVertical;\r\n    if (this.isVertical) {\r\n      this.handle.style.top = `${this.shift}%`;\r\n    } else {\r\n      this.handle.style.left = `${this.shift}%`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Handle;\r\n","import { ILabelProps } from '../../../interfaces/interfaces';\r\nimport './label.scss';\r\n\r\nclass Label {\r\n  private label: HTMLElement;\r\n\r\n  private container: HTMLElement;\r\n\r\n  private shift: number;\r\n\r\n  private isVertical: boolean;\n\r\n  private text: number;\n\r\n  constructor({ container, shift, text, isVertical }: ILabelProps) {\r\n    this.container = container;\r\n    this.shift = shift;\r\n    this.text = text;\r\n    this.isVertical = isVertical;\r\n    const label = document.createElement('div');\r\n    this.label = label;\r\n    this.render();\r\n  }\n\r\n  private render = () => {\r\n    this.label.classList.add('label');\r\n    this.container.append(this.label);\r\n    this.update(this.text, this.shift);\r\n  };\n\r\n  update = (value: number, shift: number) => {\r\n    this.text = value;\r\n    this.label.textContent = `${this.text}`;\r\n    this.shift = shift;\r\n    if (this.isVertical) {\r\n      this.label.style.top = `${this.shift}%`;\r\n    } else {\r\n      this.label.style.left = `${this.shift}%`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Label;\r\n","import {\r\n  IProgressBarOptions,\r\n  IProgressBarUpdateProps,\r\n} from '../../../interfaces/interfaces';\r\nimport './progressBar.scss';\r\n\r\nclass ProgressBar {\r\n  private container: HTMLElement;\n\r\n  private shiftFrom: number;\n\r\n  private width: number;\n\r\n  private isVertical: boolean;\n\r\n  constructor({\r\n    container,\r\n    shiftFrom,\r\n    width,\r\n    isVertical,\r\n  }: IProgressBarOptions) {\r\n    this.container = container;\r\n    this.shiftFrom = shiftFrom;\r\n    this.isVertical = isVertical;\r\n    this.width = width;\r\n    this.render(this.container);\r\n  }\n\r\n  private render = (container: HTMLElement): void => {\r\n    const progressBar = document.createElement('div');\r\n    progressBar.classList.add('progress-bar');\r\n    container.appendChild(progressBar);\r\n    this.update({\r\n      shiftFrom: this.shiftFrom,\r\n      width: this.width,\r\n      isVertical: this.isVertical,\r\n    });\r\n  };\r\n\r\n  update = ({\r\n    shiftFrom,\r\n    width,\r\n    isVertical,\r\n  }: IProgressBarUpdateProps): void => {\r\n    this.shiftFrom = shiftFrom;\r\n\r\n    this.width = width;\r\n    const progressBarNode: HTMLElement | null =\r\n      this.container.querySelector('.progress-bar');\r\n    if (progressBarNode) {\r\n      if (isVertical) {\r\n        progressBarNode.style.top = `${this.shiftFrom}%`;\r\n        progressBarNode.style.height = `${this.width}%`;\r\n      } else {\r\n        progressBarNode.style.left = `${this.shiftFrom}%`;\r\n        progressBarNode.style.width = `${this.width}%`;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default ProgressBar;\r\n","import { EventName, IScaleOptions, IScaleProps } from '../../../interfaces/interfaces';\r\nimport Observer from '../../../observer/observer';\r\nimport './scale.scss';\r\n\r\nclass Scale {\r\n  private arrayScale: number[];\r\n\r\n  private container: HTMLElement;\r\n\r\n  private shift: number;\r\n\r\n  private observer: Observer;\r\n\r\n  private isVertical: boolean;\r\n\r\n  constructor({ arrayScale, container, shift, observer, isVertical }: IScaleOptions) {\r\n    this.arrayScale = arrayScale;\r\n    this.container = container;\r\n    this.shift = shift;\r\n    this.observer = observer;\r\n    this.isVertical = isVertical;\r\n\r\n    this.render();\r\n  }\r\n\r\n  private notify = (e: PointerEvent) => {\r\n    this.observer.notify({\r\n      eventName: EventName.clickedScaleItem,\r\n      eventPayload: e,\r\n    });\r\n  };\r\n\r\n  private render = () => {\r\n    const scale = document.createElement('div');\r\n    scale.classList.add('scale');\r\n    this.arrayScale.forEach((el) => {\r\n      const scaleNumber = this.createItem();\r\n      if (this.isVertical) {\r\n        scaleNumber.style.top = `${this.shift}`;\r\n      } else {\r\n        scaleNumber.style.left = `${this.shift}`;\r\n      }\r\n      scaleNumber.textContent = `${el}`;\r\n      scaleNumber.addEventListener('pointerdown', (e) => this.notify(e));\r\n      scale.appendChild(scaleNumber);\r\n    });\r\n\r\n    this.container.appendChild(scale);\r\n    const scaleNode = this.container.querySelector('.scale');\r\n    if (scaleNode) {\r\n      // eslint-disable-next-line no-undef\r\n      const scaleItemsNode: NodeListOf<HTMLDivElement> = scaleNode.querySelectorAll('.scale__item');\r\n      let margin = 0;\r\n      for (let index = 0; index < scaleItemsNode.length; index += 1) {\r\n        if (margin > 100) {\r\n          margin = 100;\r\n        }\r\n        if (this.isVertical) {\r\n          scaleItemsNode[index].style.top = `${margin}%`;\r\n        } else {\r\n          scaleItemsNode[index].style.left = `${margin}%`;\r\n        }\r\n\r\n        margin += this.shift;\r\n      }\r\n      margin = 0;\r\n    }\r\n  };\r\n\r\n  public update = ({ scale, shift }: IScaleProps) => {\r\n    this.arrayScale = scale;\r\n    this.shift = shift;\r\n    const scaleContainer = this.container.querySelector('.scale');\r\n    if (scaleContainer) {\r\n      scaleContainer.remove();\r\n    }\r\n    this.render();\r\n  };\r\n\r\n  private createItem = () => {\r\n    const scale = document.createElement('div');\r\n    scale.classList.add('scale__item');\r\n    return scale;\r\n  };\r\n}\r\n\r\nexport default Scale;\r\n","import { ICreateArrScale } from '../../interfaces/interfaces';\r\n\r\nconst countValueRounding = (step: number) => {\r\n  const valuesEndNumber = String(step).split('.')[1];\r\n  const valueFix = valuesEndNumber ? valuesEndNumber.length : 0;\r\n\r\n  return valueFix;\r\n};\r\n\r\nconst createArrScale = (min: number, max: number, step: number) => {\r\n  const arrayScale = [];\r\n  for (let index = min; index <= max; index += step) {\r\n    const valuesFix = countValueRounding(step);\r\n    const fixedValue = Number(index.toFixed(valuesFix));\r\n    if (index === min || index === max) {\r\n      arrayScale.push(index);\r\n    } else {\r\n      arrayScale.push(fixedValue);\r\n    }\r\n  }\r\n  if ((max - min) % step !== 0) {\r\n    arrayScale.push(max);\r\n  }\r\n  return arrayScale;\r\n};\r\n\r\nconst arrScaleCreator = ({ min, max, step }: ICreateArrScale) => {\r\n  const scale = createArrScale(min, max, step);\r\n  const shift = (100 / (max - min)) * step;\r\n  return { scale, shift };\r\n};\r\n\r\nexport { arrScaleCreator, createArrScale, countValueRounding };\r\n","function getCoords(elem: HTMLElement) {\r\n  const { left, width, top, height } = elem.getBoundingClientRect();\r\n\r\n  return {\r\n    left: left + scrollX,\r\n    width,\r\n    top: top + scrollY,\r\n    height,\r\n  };\r\n}\r\n\r\nexport { getCoords };\r\n","import {\r\n  ICountProgressWidthProps,\r\n  ICountShiftFromProps,\r\n  ICountStepPixelProps,\r\n  IModelOptions,\r\n} from \"../../interfaces/interfaces\";\r\n\r\n// рассчитываем начальный отступ\r\nconst countShiftHandle = ({\r\n  min,\r\n  current,\r\n  max,\r\n  step,\r\n  isInterval,\r\n  handle,\r\n}: ICountShiftFromProps) => {\r\n  if (!isInterval && handle === \"from\") {\r\n    return 0;\r\n  }\r\n  const stepPercent = countStepPercent({ step, max, min });\r\n  return ((current - min) / step) * stepPercent;\r\n};\r\n\r\n// рассчитываем шаг в процентах\r\nconst countStepPercent = ({ step, max, min }: ICountStepPixelProps) => 100 / ((max - min) / step);\r\n\r\n// расчитываем ширину прогрессбара\r\nconst countProgressWidth = ({\r\n  step,\r\n  max,\r\n  min,\r\n  to,\r\n  from,\r\n  isInterval,\r\n}: ICountProgressWidthProps): number => {\r\n  const stepPercent = countStepPercent({ max, min, step });\r\n  if (!isInterval) {\r\n    return ((to - min) / step) * stepPercent;\r\n  }\r\n  return (Math.abs(to - from) / step) * stepPercent;\r\n};\r\n\r\nconst lineBlockCreator = (model: IModelOptions) => {\r\n  const { from, max, min, step, to, isInterval } = model;\r\n\r\n  const shiftFrom = countShiftHandle({\r\n    current: from,\r\n    max,\r\n    min,\r\n    step,\r\n    isInterval,\r\n    handle: \"from\",\r\n  });\r\n  const shiftTo = countShiftHandle({\r\n    current: to,\r\n    max,\r\n    min,\r\n    step,\r\n    isInterval,\r\n    handle: \"to\",\r\n  });\r\n  const progressWidth = countProgressWidth({\r\n    from,\r\n    max,\r\n    min,\r\n    step,\r\n    to,\r\n    isInterval,\r\n  });\r\n  return {\r\n    shiftFrom,\r\n    shiftTo,\r\n    progressWidth,\r\n  };\r\n};\r\n\r\nexport {\r\n  lineBlockCreator,\r\n  countStepPercent,\r\n  countShiftHandle,\r\n  countProgressWidth,\r\n};\r\n","import { IModelOptions } from '../../interfaces/interfaces';\r\n\r\nconst defaultOptions: IModelOptions = {\r\n  min: 0,\r\n  max: 100,\r\n  from: 20,\r\n  to: 30,\r\n  step: 1,\r\n  stepScale: 1,\r\n  isVertical: false,\r\n  isInterval: false,\r\n  isLabel: true,\r\n  isScale: true,\r\n  isProgressBar: true,\r\n};\r\n\r\nconst validateModel = (model: IModelOptions): [boolean, string] => {\r\n  const fullModel = { ...defaultOptions, ...model };\r\n  const { max, min, step, from, to } = fullModel;\r\n  const validateWidthMoreThenStep = Math.abs(max - min) >= step;\r\n  const validateFromLessThenMin = from >= min;\r\n  const validateToLessThenMax = to <= max;\r\n  const validateFromLessTo = from <= to;\r\n  const stepMoreThenZero = step > 0;\r\n  let isValid = false;\r\n  let errorMessage = '';\r\n  try {\r\n    if (!validateWidthMoreThenStep) {\r\n      throw Error(\r\n        'The difference between the maximum and minimum value must be equal to or greater than the step',\r\n      );\r\n    }\r\n    if (!validateFromLessThenMin) {\r\n      throw Error(\r\n        \"The starting point of the start slider must be less than or equal to the slider's minimum value\",\r\n      );\r\n    }\r\n    if (!validateToLessThenMax) {\r\n      throw Error(\r\n        \"The ending point of the start slider must be less than or equal to the slider's maximum value\",\r\n      );\r\n    }\r\n    if (!validateFromLessTo) {\r\n      throw Error('From point must be less or equal To point');\r\n    }\r\n    if (!stepMoreThenZero) {\r\n      throw Error('Step should be more then 0');\r\n    }\r\n    isValid = true;\r\n  } catch (e) {\r\n    errorMessage = (e as Error).message;\r\n    isValid = false;\r\n  } finally {\r\n    return [isValid, errorMessage];\r\n  }\r\n};\r\n\r\nexport { validateModel };\r\n"],"names":[],"version":3,"file":"slider.js.map"}