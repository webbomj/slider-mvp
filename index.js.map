{"mappings":"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","sources":["src/index.ts","src/layers/presenter/presenter.ts","src/layers/interfaces/interfaces.ts","src/layers/model/model.ts","src/layers/observer/observer.ts","src/layers/view/view.ts","src/layers/view/components/lineBlock/lineBlock.ts","src/layers/view/components/handle/handle.ts","src/layers/view/components/label/label.ts","src/layers/view/components/progressBar/progressBar.ts","src/layers/view/components/scale/scale.ts","src/layers/presenter/utils/scale.ts","src/layers/presenter/utils/handle.ts","src/layers/presenter/utils/lineBlock.ts"],"sourcesContent":["import { IModelOptions } from \"./layers/interfaces/interfaces\";\r\nimport Presenter from \"./layers/presenter/presenter\";\r\n\r\nconst defaultOptions: IModelOptions = {\r\n  min: 0,\r\n  max: 19,\r\n  from: 3,\r\n  to: 9,\r\n  step: 3,\r\n  isVertical: false,\r\n  isInterval: true,\r\n  isLabel: true,\r\n  isScale: true,\r\n  isProgressBar: true,\r\n};\r\n\r\nconst container = document.getElementById(\"app\");\r\nif (container) {\r\n  const app = new Presenter({ container, options: defaultOptions });\r\n  console.log(app);\r\n}\r\n","import {\r\n  EventName,\r\n  HandlePosition,\r\n  ILineBlockOptions,\r\n  IModelOptions,\r\n  IPresenterOptions,\r\n  IScaleProps,\r\n  ModelAction,\r\n} from \"../interfaces/interfaces\";\r\nimport Model from \"../model/model\";\r\nimport View from \"../view/view\";\r\nimport { arrScaleCreator } from \"./utils/scale\";\r\nimport { getCoords } from \"./utils/handle\";\r\nimport { lineBlockCreator } from \"./utils/lineBlock\";\r\n\r\nclass Presenter {\r\n  private model;\r\n  private view;\r\n  private state: IModelOptions;\r\n  private container;\r\n  constructor({ options, container }: IPresenterOptions) {\r\n    const defaultOptions: IModelOptions = {\r\n      min: 0,\r\n      max: 100,\r\n      from: 20,\r\n      to: 0,\r\n      step: 1,\r\n      isVertical: false,\r\n      isInterval: false,\r\n      isLabel: true,\r\n      isScale: true,\r\n      isProgressBar: true,\r\n    };\r\n    this.container = container;\r\n    const joinOptions = { ...defaultOptions, ...options };\r\n    this.model = new Model(joinOptions);\r\n    this.getState();\r\n    const scaleOptions = this.createArrScale();\r\n\r\n    const lineBlockOptions = this.createLineBlock();\r\n    this.view = new View({\r\n      options: joinOptions,\r\n      container: this.container,\r\n      scaleOptions,\r\n      lineBlockOptions,\r\n    });\r\n\r\n    this.subscribe();\r\n  }\r\n\r\n  getState = (): void => {\r\n    this.state = this.model.getState();\r\n  };\r\n\r\n  createLineBlock = (): ILineBlockOptions => {\r\n    this.getState();\r\n    const { progressWidth, shiftFrom, shiftTo } = lineBlockCreator(this.state);\r\n    return { progressBarWidth: progressWidth, shift: shiftTo, shiftFrom };\r\n  };\r\n\r\n  createArrScale = (): IScaleProps => {\r\n    const { max, min, step } = this.state;\r\n    const { scale, shift } = arrScaleCreator({ max, min, step });\r\n    return { scale, shift };\r\n  };\r\n\r\n  clickedScaleItemHandler = (e: PointerEvent): void => {\r\n    this.getState();\r\n    const newValue = +e.target?.textContent;\r\n    const { from, to, isInterval } = this.state;\r\n    if (isInterval) {\r\n      const difFromNewValue = Math.abs(Math.abs(from) - Math.abs(newValue));\r\n      const difToNewValue = Math.abs(Math.abs(to) - Math.abs(newValue));\r\n\r\n      if (difToNewValue < difFromNewValue) {\r\n        this.model.updateState({\r\n          type: ModelAction.setToValue,\r\n          payload: { value: newValue },\r\n        });\r\n      } else if (difToNewValue > difFromNewValue) {\r\n        this.model.updateState({\r\n          type: ModelAction.setFromValue,\r\n          payload: { value: newValue },\r\n        });\r\n      } else if (difFromNewValue === difToNewValue) {\r\n        if (newValue < to) {\r\n          this.model.updateState({\r\n            type: ModelAction.setFromValue,\r\n            payload: { value: newValue },\r\n          });\r\n        } else {\r\n          this.model.updateState({\r\n            type: ModelAction.setToValue,\r\n            payload: { value: newValue },\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      this.model.updateState({\r\n        type: ModelAction.setToValue,\r\n        payload: { value: newValue },\r\n      });\r\n    }\r\n  };\r\n\r\n  clickedLineHandler = (event: PointerEvent) => {\r\n    const { max, min, step, isInterval, isVertical, to, from } = this.state;\r\n    let slider = this.container.querySelector(\".lineBlock\");\r\n    let progressbar = this.container.querySelector(\".lineBlock__progressBar\");\r\n    if (event.target !== progressbar && event.target !== slider) {\r\n      return false;\r\n    }\r\n    let sliderCoords = getCoords(slider);\r\n    let left = ((event.pageY - sliderCoords.top) / sliderCoords.height) * 100;\r\n    if (!isVertical) {\r\n      left = ((event.pageX - sliderCoords.left) / sliderCoords.width) * 100;\r\n    }\r\n    if (left < 0) left = 0;\r\n    if (left > 100) left = 100;\r\n\r\n    let stepCount = (max - min) / step;\r\n    let stepPercent = 100 / stepCount;\r\n    let stepLeft = (left / stepPercent) * stepPercent;\r\n\r\n    if (stepLeft < 0) stepLeft = 0;\r\n    if (stepLeft > 100) stepLeft = 100;\r\n\r\n    let result = Number(((stepLeft / stepPercent) * step).toFixed());\r\n    let value = result + min;\r\n\r\n    if (isInterval) {\r\n      const difFromNewValue = Math.abs(Math.abs(from) - Math.abs(value));\r\n      const difToNewValue = Math.abs(Math.abs(to) - Math.abs(value));\r\n\r\n      if (difToNewValue < difFromNewValue) {\r\n        this.model.updateState({\r\n          type: ModelAction.setToValue,\r\n          payload: { value: value },\r\n        });\r\n      } else if (difToNewValue > difFromNewValue) {\r\n        this.model.updateState({\r\n          type: ModelAction.setFromValue,\r\n          payload: { value: value },\r\n        });\r\n      } else if (difFromNewValue === difToNewValue) {\r\n        if (value < to) {\r\n          this.model.updateState({\r\n            type: ModelAction.setFromValue,\r\n            payload: { value: value },\r\n          });\r\n        } else {\r\n          this.model.updateState({\r\n            type: ModelAction.setToValue,\r\n            payload: { value: value },\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      this.model.updateState({\r\n        type: ModelAction.setToValue,\r\n        payload: { value: value },\r\n      });\r\n    }\r\n  };\r\n\r\n  clickedHandleHandler = (event: PointerEvent): void => {\r\n    const { max, min, step, isInterval, isVertical, to, from } = this.state;\r\n\r\n    let sliderSpan = event.target;\r\n    let slider = this.container.querySelector(\".lineBlock\");\r\n\r\n    if (to === min && from === min) {\r\n      sliderSpan = this.container.querySelector(\"[data-handle=to]\");\r\n      console.log(sliderSpan);\r\n    }\r\n    let position = sliderSpan?.dataset.handle;\r\n\r\n    let sliderCoords = getCoords(slider);\r\n    let sliderSpanCoords = getCoords(sliderSpan);\r\n    let shift = event.pageX - sliderSpanCoords.left;\r\n    if (isVertical) {\r\n      shift = event.pageY - sliderSpanCoords.top;\r\n    }\r\n    const mouseMoveHandler = (evt: PointerEvent) => handleMove(evt);\r\n    document.addEventListener(\"pointermove\", mouseMoveHandler);\r\n\r\n    //Начнем движение ползунка\r\n    const handleMove = (evt: PointerEvent): void => {\r\n      let left =\r\n        ((evt.pageX - shift - sliderCoords.left) / sliderCoords.width) * 100;\r\n      if (isVertical) {\r\n        left =\r\n          ((evt.pageY - shift - sliderCoords.top) / sliderCoords.height) * 100;\r\n      }\r\n      if (left < 0) left = 0;\r\n      if (left > 100) left = 100;\r\n\r\n      //Шаг слайдера\r\n      let stepCount = (max - min) / step;\r\n      let stepPercent = 100 / stepCount;\r\n      let stepLeft = (left / stepPercent) * stepPercent;\r\n      if (stepLeft < 0) stepLeft = 0;\r\n      if (stepLeft > 100) stepLeft = 100;\r\n\r\n      //Расчитаем значение равное шагу слайдера\r\n      let result = Number(((stepLeft / stepPercent) * step).toFixed());\r\n      let value = result + min;\r\n\r\n      if (isInterval) {\r\n        if (position === HandlePosition.to) {\r\n          if (value < this.state.from) {\r\n            value = this.state.from;\r\n          }\r\n          this.model.updateState({\r\n            type: ModelAction.setToValue,\r\n            payload: { value },\r\n          });\r\n        } else if (position === HandlePosition.from) {\r\n          if (value > this.state.to) {\r\n            value = this.state.to;\r\n          }\r\n          this.model.updateState({\r\n            type: ModelAction.setFromValue,\r\n            payload: { value },\r\n          });\r\n        }\r\n      } else {\r\n        this.model.updateState({\r\n          type: ModelAction.setToValue,\r\n          payload: { value },\r\n        });\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"pointerup\", function () {\r\n      document.removeEventListener(\"pointermove\", mouseMoveHandler);\r\n    });\r\n  };\r\n\r\n  modelWasUpdate = (model: IModelOptions): void => {\r\n    this.getState();\r\n    const scaleProps = this.createArrScale();\r\n    const lineBlockOptions = this.createLineBlock();\r\n    this.view.updateView({ model, scaleProps, lineBlockOptions });\r\n  };\r\n\r\n  subscribe = (): void => {\r\n    this.view.subscribe({\r\n      eventName: EventName.clickedScaleItem,\r\n      function: this.clickedScaleItemHandler,\r\n    });\r\n\r\n    this.view.subscribe({\r\n      eventName: EventName.clickedHandle,\r\n      function: this.clickedHandleHandler,\r\n    });\r\n\r\n    this.view.subscribe({\r\n      eventName: EventName.clickedLine,\r\n      function: this.clickedLineHandler,\r\n    });\r\n\r\n    // model sub\r\n    this.model.subscribe({\r\n      eventName: EventName.modelWasUpdate,\r\n      function: this.modelWasUpdate,\r\n    });\r\n  };\r\n}\r\n\r\nexport default Presenter;\r\n","import Observer from \"../observer/observer\";\r\n\r\ninterface IModelOptions {\r\n  min: number;\r\n  max: number;\r\n  from: number;\r\n  to: number;\r\n  step: number;\r\n  isVertical: boolean;\r\n  isInterval: boolean;\r\n  isLabel: boolean;\r\n  isScale: boolean;\r\n  isProgressBar: boolean;\r\n}\r\n\r\nenum ModelAction {\r\n  \"setMinValue\",\r\n  \"setMaxValue\",\r\n  \"setFromValue\",\r\n  \"setToValue\",\r\n  \"setStep\",\r\n  \"setIsVertical\",\r\n  \"setIsInterval\",\r\n  \"setIsLabel\",\r\n  \"setIsProgressBar\",\r\n  \"setIsScale\",\r\n}\r\n\r\ninterface IModelAction {\r\n  type: ModelAction;\r\n  payload: {\r\n    value: number | boolean;\r\n  };\r\n}\r\n\r\ninterface IPresenterOptions {\r\n  container: HTMLElement;\r\n  options: IModelOptions;\r\n}\r\n\r\ninterface IScaleProps {\r\n  scale: number[];\r\n  shift: number;\r\n}\r\n\r\ninterface IViewOptions {\r\n  container: HTMLElement;\r\n  options: IModelOptions;\r\n  scaleOptions: IScaleProps;\r\n  lineBlockOptions: ILineBlockOptions;\r\n}\r\n\r\ninterface ILineBlockOptions {\r\n  shift: number;\r\n  shiftFrom: number;\r\n  progressBarWidth: number;\r\n}\r\n\r\ninterface ILineBlockProps {\r\n  container: HTMLElement;\r\n  model: IModelOptions;\r\n  observer: Observer;\r\n  options: ILineBlockOptions;\r\n}\r\n\r\ninterface IObserver {\r\n  subscribe: (subscriber: ISubscriber) => void;\r\n  unsubscribe: (subscriber: ISubscriber) => void;\r\n  notify: (eventObject: IEventObject) => void;\r\n}\r\n\r\nenum EventName {\r\n  clickedScaleItem = \"clickedScaleItem\",\r\n  modelWasUpdate = \"modelWasUpdate\",\r\n  clickedHandle = \"clickedHandle\",\r\n  clickedLine = \"clickedLine\",\r\n}\r\n\r\ninterface ISubscriber {\r\n  eventName: EventName;\r\n  function: (e: Event | IModelOptions | Event[]) => void;\r\n}\r\n\r\ninterface IEventObject {\r\n  eventName: EventName;\r\n  eventPayload: Event | IModelOptions | Event[];\r\n}\r\n\r\ninterface IScaleOptions {\r\n  container: HTMLElement;\r\n  arrayScale: number[];\r\n  shift: number;\r\n  observer: Observer;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface IViewInitProps {\r\n  scaleOptions: IScaleProps;\r\n  lineBlockOptions: ILineBlockOptions;\r\n}\r\n\r\ninterface IUpdateViewProps {\r\n  model: IModelOptions;\r\n  scaleProps: IScaleProps;\r\n  lineBlockOptions: ILineBlockOptions;\r\n}\r\n\r\ninterface ICreateArrScale {\r\n  max: number;\r\n  min: number;\r\n  step: number;\r\n}\r\n\r\ninterface IProgressBarOptions {\r\n  container: HTMLElement;\r\n  shiftFrom: number;\r\n  width: number;\r\n  observer: Observer;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface ICountShiftFromProps {\r\n  min: number;\r\n  current: number;\r\n  step: number;\r\n  max: number;\r\n  isInterval: boolean;\r\n  handle: \"from\" | \"to\";\r\n}\r\n\r\ninterface ICountShiftToProps {\r\n  min: number;\r\n  step: number;\r\n  max: number;\r\n  to: number;\r\n}\r\n\r\ninterface ICountProgressWidthProps {\r\n  step: number;\r\n  max: number;\r\n  min: number;\r\n  to: number;\r\n  from: number;\r\n  isInterval: boolean;\r\n}\r\n\r\ninterface IProgressBarUpdateProps {\r\n  shiftFrom: number;\r\n  width: number;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface ICountStepPixelProps {\r\n  step: number;\r\n  max: number;\r\n  min: number;\r\n}\r\n\r\nenum HandlePosition {\r\n  from = \"from\",\r\n  to = \"to\",\r\n}\r\n\r\ninterface IHandleProps {\r\n  container: HTMLElement;\r\n  shift: number;\r\n  observer: Observer;\r\n  handlePosition?: HandlePosition;\r\n  isVertical: boolean;\r\n}\r\n\r\ninterface ILabelProps {\r\n  container: HTMLElement;\r\n  shift: number;\r\n  text: number;\r\n  observer: Observer;\r\n  isVertical: boolean;\r\n}\r\n\r\nexport {\r\n  IModelOptions,\r\n  ModelAction,\r\n  IPresenterOptions,\r\n  IViewOptions,\r\n  ILineBlockOptions,\r\n  ILineBlockProps,\r\n  IModelAction,\r\n  IObserver,\r\n  ISubscriber,\r\n  IEventObject,\r\n  IScaleOptions,\r\n  IViewInitProps,\r\n  IUpdateViewProps,\r\n  ICreateArrScale,\r\n  IProgressBarOptions,\r\n  ICountShiftFromProps,\r\n  ICountShiftToProps,\r\n  ICountProgressWidthProps,\r\n  IProgressBarUpdateProps,\r\n  ICountStepPixelProps,\r\n  HandlePosition,\r\n  IHandleProps,\r\n  ILabelProps,\r\n  IScaleProps,\r\n  EventName,\r\n};\r\n","import {\r\n  IModelOptions,\r\n  ModelAction,\r\n  IModelAction,\r\n  IObserver,\r\n  ISubscriber,\r\n  EventName,\r\n} from \"../interfaces/interfaces\";\r\nimport Observer from \"../observer/observer\";\r\n\r\nexport default class Model {\r\n  private minValue: number;\r\n\r\n  private maxValue: number;\r\n\r\n  private fromValue: number;\r\n\r\n  private toValue: number;\r\n\r\n  private step: number;\r\n\r\n  private isVertical: boolean;\r\n\r\n  private isInterval: boolean;\r\n\r\n  private isLabel: boolean;\r\n\r\n  private isScale: boolean;\r\n\r\n  private isProgressBar: boolean;\r\n\r\n  public observer: IObserver = new Observer();\r\n\r\n  constructor(options: IModelOptions) {\r\n    const {\r\n      min,\r\n      max,\r\n      from,\r\n      to,\r\n      step,\r\n      isVertical,\r\n      isInterval,\r\n      isLabel,\r\n      isScale,\r\n      isProgressBar,\r\n    } = options;\r\n\r\n    this.minValue = min;\r\n    this.maxValue = max;\r\n    this.fromValue = from;\r\n    this.toValue = to;\r\n    this.step = step;\r\n    this.isVertical = isVertical;\r\n    this.isInterval = isInterval;\r\n    this.isLabel = isLabel;\r\n    this.isScale = isScale;\r\n    this.isProgressBar = isProgressBar;\r\n  }\r\n\r\n  updateState = ({ type, payload }: IModelAction): void => {\r\n    if (typeof payload.value === \"number\") {\r\n      switch (type) {\r\n        case ModelAction.setMinValue:\r\n          this.minValue = payload.value;\r\n          break;\r\n        case ModelAction.setMaxValue:\r\n          this.maxValue = payload.value;\r\n          break;\r\n        case ModelAction.setFromValue:\r\n          this.fromValue = payload.value;\r\n          break;\r\n        case ModelAction.setToValue:\r\n          this.toValue = payload.value;\r\n          break;\r\n        case ModelAction.setStep:\r\n          this.step = payload.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.observer.notify({\r\n        eventName: EventName.modelWasUpdate,\r\n        eventPayload: this.getState(),\r\n      });\r\n    } else if (typeof payload.value === \"boolean\") {\r\n      switch (type) {\r\n        case ModelAction.setIsVertical:\r\n          this.isVertical = payload.value;\r\n          break;\r\n        case ModelAction.setIsInterval:\r\n          this.isInterval = payload.value;\r\n          break;\r\n        case ModelAction.setIsLabel:\r\n          this.isLabel = payload.value;\r\n          break;\r\n        case ModelAction.setIsProgressBar:\r\n          this.isProgressBar = payload.value;\r\n          break;\r\n        case ModelAction.setIsScale:\r\n          this.isScale = payload.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.observer.notify({\r\n        eventName: EventName.modelWasUpdate,\r\n        eventPayload: this.getState(),\r\n      });\r\n    }\r\n    console.log(type, payload.value);\r\n  };\r\n\r\n  public subscribe = (subscriber: ISubscriber) => {\r\n    this.observer.subscribe(subscriber);\r\n  };\r\n\r\n  public getState = (): IModelOptions => {\r\n    return {\r\n      from: this.fromValue,\r\n      isInterval: this.isInterval,\r\n      isLabel: this.isLabel,\r\n      isProgressBar: this.isProgressBar,\r\n      isScale: this.isScale,\r\n      isVertical: this.isVertical,\r\n      max: this.maxValue,\r\n      min: this.minValue,\r\n      step: this.step,\r\n      to: this.toValue,\r\n    };\r\n  };\r\n}\r\n","import { IEventObject, IObserver, ISubscriber } from \"../interfaces/interfaces\";\r\n\r\nclass Observer implements IObserver {\r\n  private subscribers: ISubscriber[];\r\n  constructor() {\r\n    this.subscribers = [];\r\n  }\r\n  subscribe = (subscriber: ISubscriber): void => {\r\n    this.subscribers.push(subscriber);\r\n  };\r\n  unsubscribe = (subscriber: ISubscriber): void => {\r\n    this.subscribers = this.subscribers.filter((el) => el !== subscriber);\r\n  };\r\n  notify = (eventObject: IEventObject): void => {\r\n    this.subscribers.forEach((el) =>\r\n      el.eventName === eventObject.eventName\r\n        ? el.function(eventObject.eventPayload)\r\n        : null\r\n    );\r\n  };\r\n}\r\n\r\nexport default Observer;\r\n","import {\r\n  IModelOptions,\r\n  IScaleOptions,\r\n  ISubscriber,\r\n  IUpdateViewProps,\r\n  IViewInitProps,\r\n  IViewOptions,\r\n} from \"../interfaces/interfaces\";\r\nimport Observer from \"../observer/observer\";\r\nimport lineBlock from \"./components/lineBlock/lineBlock\";\r\nimport Scale from \"./components/scale/scale\";\r\n\r\nclass View {\r\n  private container: HTMLElement;\r\n  private options: IModelOptions;\r\n  public observer: Observer;\r\n  private slide: lineBlock;\r\n  private scale: Scale;\r\n  private isVertical: boolean;\r\n\r\n  constructor({\r\n    options,\r\n    container,\r\n    scaleOptions,\r\n    lineBlockOptions,\r\n  }: IViewOptions) {\r\n    this.container = container;\r\n    this.options = options;\r\n    this.observer = new Observer();\r\n    this.isVertical = options.isVertical;\r\n    this.init({ scaleOptions, lineBlockOptions });\r\n  }\r\n\r\n  init = ({ scaleOptions, lineBlockOptions }: IViewInitProps) => {\r\n    this.slide = new lineBlock({\r\n      container: this.container,\r\n      model: this.options,\r\n      observer: this.observer,\r\n      options: lineBlockOptions,\r\n    });\r\n    if (this.options.isScale) {\r\n      let scaleProps: IScaleOptions = {\r\n        container: this.container,\r\n        arrayScale: scaleOptions.scale,\r\n        shift: scaleOptions.shift,\r\n        observer: this.observer,\r\n        isVertical: this.isVertical,\r\n      };\r\n      this.scale = new Scale(scaleProps);\r\n    }\r\n  };\r\n\r\n  updateView = ({ model, scaleProps, lineBlockOptions }: IUpdateViewProps) => {\r\n    this.slide.update(model, lineBlockOptions);\r\n    if (model.isScale) {\r\n      this.scale.update(scaleProps);\r\n    }\r\n  };\r\n\r\n  public subscribe = (subscriber: ISubscriber) => {\r\n    this.observer.subscribe(subscriber);\r\n  };\r\n}\r\n\r\nexport default View;\r\n","import {\r\n  EventName,\r\n  HandlePosition,\r\n  ILineBlockOptions,\r\n  ILineBlockProps,\r\n  IModelOptions,\r\n  IProgressBarOptions,\r\n} from \"../../../interfaces/interfaces\";\r\nimport Observer from \"../../../observer/observer\";\r\nimport Handle from \"../handle/handle\";\r\nimport Label from \"../label/label\";\r\nimport ProgressBar from \"../progressBar/progressBar\";\r\nimport \"./lineBlock.scss\";\r\n\r\nclass lineBlock {\r\n  private container: HTMLElement;\r\n  private state;\r\n  private progressBar: ProgressBar;\r\n  private labelTo: Label;\r\n  private labelFrom: Label;\r\n  private handleTo: Handle;\r\n  private handleFrom: Handle;\r\n  private observer: Observer;\r\n\r\n  constructor(lineOptions: ILineBlockProps) {\r\n    const { container, model, observer, options } = lineOptions;\r\n    this.container = container;\r\n    this.state = model;\r\n    this.observer = observer;\r\n    this.init(options);\r\n  }\r\n\r\n  init = (options: ILineBlockOptions) => {\r\n    const { progressBarWidth, shift, shiftFrom } = options;\r\n    const lineBlock = document.createElement(\"div\");\r\n    const activeBlock = document.createElement(\"div\");\r\n\r\n    const { to, from } = this.state;\r\n\r\n    lineBlock.classList.add(\"lineBlock\");\r\n    lineBlock.setAttribute(\"data-isvertical\", String(this.state.isVertical));\r\n    activeBlock.classList.add(\"lineBlock__active\");\r\n    lineBlock.addEventListener(\"pointerdown\", (e) =>\r\n      this.observer.notify({\r\n        eventName: EventName.clickedLine,\r\n        eventPayload: e,\r\n      })\r\n    );\r\n\r\n    if (this.state.isInterval) {\r\n      this.handleTo = new Handle({\r\n        container: activeBlock,\r\n        shift: shift,\r\n        observer: this.observer,\r\n        handlePosition: HandlePosition.to,\r\n        isVertical: this.state.isVertical,\r\n      });\r\n      if (this.state.isLabel) {\r\n        this.labelTo = new Label({\r\n          container: activeBlock,\r\n          shift: shift,\r\n          text: to,\r\n          observer: this.observer,\r\n          isVertical: this.state.isVertical,\r\n        });\r\n      }\r\n\r\n      this.handleFrom = new Handle({\r\n        container: activeBlock,\r\n        shift: shiftFrom,\r\n        observer: this.observer,\r\n        handlePosition: HandlePosition.from,\r\n        isVertical: this.state.isVertical,\r\n      });\r\n\r\n      if (this.state.isLabel) {\r\n        this.labelFrom = new Label({\r\n          container: activeBlock,\r\n          shift: shiftFrom,\r\n          text: from,\r\n          observer: this.observer,\r\n          isVertical: this.state.isVertical,\r\n        });\r\n      }\r\n    } else {\r\n      this.handleTo = new Handle({\r\n        container: activeBlock,\r\n        shift: shift,\r\n        observer: this.observer,\r\n        isVertical: this.state.isVertical,\r\n      });\r\n      if (this.state.isLabel) {\r\n        this.labelTo = new Label({\r\n          container: activeBlock,\r\n          shift: shift,\r\n          text: to,\r\n          observer: this.observer,\r\n          isVertical: this.state.isVertical,\r\n        });\r\n      }\r\n    }\r\n\r\n    lineBlock.append(activeBlock);\r\n\r\n    const ProgressBarOptions: IProgressBarOptions = {\r\n      container: lineBlock,\r\n      shiftFrom: shiftFrom,\r\n      width: progressBarWidth,\r\n      observer: this.observer,\r\n      isVertical: this.state.isVertical,\r\n    };\r\n\r\n    this.progressBar = new ProgressBar(ProgressBarOptions);\r\n    if (this.container) {\r\n      this.container.append(lineBlock);\r\n    }\r\n  };\r\n\r\n  update = (model: IModelOptions, options: ILineBlockOptions) => {\r\n    const { from, to, isInterval, isLabel, isVertical } = model;\r\n    const { progressBarWidth, shift, shiftFrom } = options;\r\n\r\n    if (isLabel) {\r\n      this.labelTo.update(to, shift);\r\n    }\r\n    if (isInterval) {\r\n      this.handleFrom.update(shiftFrom, isVertical);\r\n      if (isLabel) {\r\n        this.labelFrom.update(from, shiftFrom);\r\n      }\r\n    }\r\n    if (isVertical) {\r\n      this.handleTo.update(shift, isVertical);\r\n    } else {\r\n      this.handleTo.update(shift);\r\n    }\r\n\r\n    this.progressBar.update({\r\n      shiftFrom: shiftFrom,\r\n      width: progressBarWidth,\r\n      isVertical: this.state.isVertical,\r\n    });\r\n  };\r\n}\r\n\r\nexport default lineBlock;\r\n","import {\r\n  EventName,\r\n  HandlePosition,\r\n  IHandleProps,\r\n} from \"../../../interfaces/interfaces\";\r\nimport Observer from \"../../../observer/observer\";\r\n\r\nclass Handle {\r\n  private container: HTMLElement;\r\n  private shift: number;\r\n  private handle: HTMLElement;\r\n  private observer: Observer;\r\n  private handlePosition: HandlePosition | undefined;\r\n  constructor({\r\n    container,\r\n    shift,\r\n    observer,\r\n    handlePosition,\r\n    isVertical,\r\n  }: IHandleProps) {\r\n    this.container = container;\r\n    this.shift = shift;\r\n    this.observer = observer;\r\n    this.handlePosition = handlePosition;\r\n    this.render();\r\n    this.update(this.shift, isVertical);\r\n  }\r\n  render = () => {\r\n    const handle = document.createElement(\"div\");\r\n    handle.classList.add(\"lineBlock__handler\");\r\n    if (this.handlePosition) {\r\n      handle.dataset.handle = this.handlePosition;\r\n    }\r\n    this.handle = handle;\r\n    this.container.append(handle);\r\n    this.handle.addEventListener(\"pointerdown\", (e: PointerEvent) =>\r\n      this.clickHandler(e)\r\n    );\r\n  };\r\n\r\n  clickHandler = (event: PointerEvent) => {\r\n    this.observer.notify({\r\n      eventName: EventName.clickedHandle,\r\n      eventPayload: event,\r\n    });\r\n  };\r\n\r\n  update = (value: number, isVertical: boolean = false) => {\r\n    this.shift = value;\r\n    if (isVertical) {\r\n      this.handle.style.top = `${this.shift}%`;\r\n    } else {\r\n      this.handle.style.left = `${this.shift}%`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Handle;\r\n","import { ILabelProps } from \"../../../interfaces/interfaces\";\r\nimport Observer from \"../../../observer/observer\";\r\n\r\nclass Label {\r\n  private label: HTMLElement;\r\n  private container: HTMLElement;\r\n  private shift: number;\r\n  private observer: Observer;\r\n  private isVertical: boolean;\r\n  constructor({ container, shift, text, observer, isVertical }: ILabelProps) {\r\n    this.container = container;\r\n    this.shift = shift;\r\n    this.isVertical = isVertical;\r\n    this.observer = observer;\r\n    const label = document.createElement(\"div\");\r\n    this.label = label;\r\n    this.render();\r\n    this.update(text, this.shift);\r\n  }\r\n  render = () => {\r\n    this.label.classList.add(\"lineBlock__label\");\r\n    this.container.append(this.label);\r\n  };\r\n  update = (value: number, shift: number) => {\r\n    this.label.textContent = `${value}`;\r\n    this.shift = shift;\r\n    if (this.isVertical) {\r\n      this.label.style.top = `${this.shift}%`;\r\n    } else {\r\n      this.label.style.left = `${this.shift}%`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default Label;\r\n","import {\r\n  IProgressBarOptions,\r\n  IProgressBarUpdateProps,\r\n} from \"../../../interfaces/interfaces\";\r\nimport Observer from \"../../../observer/observer\";\r\n\r\nclass ProgressBar {\r\n  private container: HTMLElement;\r\n  private shiftFrom: number;\r\n  private width: number;\r\n  private observer: Observer;\r\n  private isVertical: boolean;\r\n  constructor({\r\n    container,\r\n    shiftFrom,\r\n    width,\r\n    observer,\r\n    isVertical,\r\n  }: IProgressBarOptions) {\r\n    this.container = container;\r\n    this.shiftFrom = shiftFrom;\r\n    this.isVertical = isVertical;\r\n    this.width = width;\r\n    this.observer = observer;\r\n    this.render(this.container);\r\n  }\r\n  render = (container: HTMLElement): void => {\r\n    const progressBar = document.createElement(\"div\");\r\n    progressBar.classList.add(\"lineBlock__progressBar\");\r\n    container.appendChild(progressBar);\r\n    this.update({\r\n      shiftFrom: this.shiftFrom,\r\n      width: this.width,\r\n      isVertical: this.isVertical,\r\n    });\r\n  };\r\n\r\n  update = ({\r\n    shiftFrom,\r\n    width,\r\n    isVertical,\r\n  }: IProgressBarUpdateProps): void => {\r\n    this.shiftFrom = shiftFrom;\r\n\r\n    this.width = width;\r\n    const progressBarNode: HTMLElement | null = this.container.querySelector(\r\n      \".lineBlock__progressBar\"\r\n    );\r\n    if (progressBarNode) {\r\n      if (isVertical) {\r\n        progressBarNode.style.top = `${this.shiftFrom}%`;\r\n        progressBarNode.style.height = `${this.width}%`;\r\n      } else {\r\n        progressBarNode.style.left = `${this.shiftFrom}%`;\r\n        progressBarNode.style.width = `${this.width}%`;\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default ProgressBar;\r\n","import {\r\n  EventName,\r\n  IScaleOptions,\r\n  IScaleProps,\r\n} from \"../../../interfaces/interfaces\";\r\nimport Observer from \"../../../observer/observer\";\r\nimport \"./scale.scss\";\r\n\r\nclass Scale {\r\n  private arrayScale: number[];\r\n  private container: HTMLElement;\r\n  private shift: number;\r\n  private observer: Observer;\r\n  private isVertical: boolean;\r\n  constructor({\r\n    arrayScale,\r\n    container,\r\n    shift,\r\n    observer,\r\n    isVertical,\r\n  }: IScaleOptions) {\r\n    this.arrayScale = arrayScale;\r\n    this.container = container;\r\n    this.shift = shift;\r\n    this.observer = observer;\r\n    this.isVertical = isVertical;\r\n\r\n    this.render();\r\n  }\r\n\r\n  notify = (e: PointerEvent) => {\r\n    this.observer.notify({\r\n      eventName: EventName.clickedScaleItem,\r\n      eventPayload: e,\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const scale = document.createElement(\"div\");\r\n    scale.classList.add(\"scale\");\r\n    this.arrayScale.forEach((el) => {\r\n      let scaleNumber = this.createItem();\r\n      if (this.isVertical) {\r\n        scaleNumber.style.top = `${this.shift}`;\r\n      } else {\r\n        scaleNumber.style.left = `${this.shift}`;\r\n      }\r\n      scaleNumber.textContent = `${el}`;\r\n      scaleNumber.addEventListener(\"pointerdown\", (e) => this.notify(e));\r\n      scale.appendChild(scaleNumber);\r\n    });\r\n\r\n    this.container.appendChild(scale);\r\n    const scaleNode = this.container.querySelector(\".scale\");\r\n    if (scaleNode) {\r\n      const scaleItemsNode = scaleNode.querySelectorAll(\".scale__item\");\r\n      let margin = 0;\r\n      for (let index = 0; index < scaleItemsNode.length; index++) {\r\n        if (margin > 100) {\r\n          margin = 100;\r\n        }\r\n        if (this.isVertical) {\r\n          scaleItemsNode[index].style.top = `${margin}%`;\r\n        } else {\r\n          scaleItemsNode[index].style.left = `${margin}%`;\r\n        }\r\n\r\n        margin += this.shift;\r\n      }\r\n      margin = 0;\r\n    }\r\n  };\r\n\r\n  update = ({ scale, shift }: IScaleProps) => {\r\n    this.arrayScale = scale;\r\n    this.shift = shift;\r\n    const scaleContainer = this.container.querySelector(\".scale\");\r\n    if (scaleContainer) {\r\n      scaleContainer.remove();\r\n    }\r\n    this.render();\r\n  };\r\n\r\n  createItem = () => {\r\n    const scale = document.createElement(\"div\");\r\n    scale.classList.add(\"scale__item\");\r\n    return scale;\r\n  };\r\n}\r\n\r\nexport default Scale;\r\n","import { ICreateArrScale } from \"../../interfaces/interfaces\";\r\n\r\nconst createArrScale = (min: number, max: number, step: number) => {\r\n  let arrayScale = [];\r\n  for (let index = min; index <= max; index += step) {\r\n    arrayScale.push(index);\r\n  }\r\n  if ((max - min) % step !== 0) {\r\n    arrayScale.push(max);\r\n  }\r\n  return arrayScale;\r\n};\r\n\r\nconst arrScaleCreator = ({ min, max, step }: ICreateArrScale) => {\r\n  const scale = createArrScale(min, max, step);\r\n  const shift = (100 / (max - min)) * step;\r\n  return { scale, shift };\r\n};\r\n\r\nexport { arrScaleCreator };\r\n","function getCoords(elem: HTMLElement) {\r\n  let { left, width, top, height } = elem.getBoundingClientRect();\r\n\r\n  return {\r\n    left: left + scrollX,\r\n    width: width,\r\n    top: top + scrollY,\r\n    height: height,\r\n  };\r\n}\r\n\r\nexport { getCoords };\r\n","import {\r\n  ICountProgressWidthProps,\r\n  ICountShiftFromProps,\r\n  ICountShiftToProps,\r\n  ICountStepPixelProps,\r\n  IModelOptions,\r\n} from \"../../interfaces/interfaces\";\r\n\r\n//рассчитываем начальный отступ\r\nconst countShiftHandle = ({\r\n  min,\r\n  current,\r\n  max,\r\n  step,\r\n  isInterval,\r\n  handle,\r\n}: ICountShiftFromProps) => {\r\n  if (!isInterval && handle === \"from\") {\r\n    return 0;\r\n  }\r\n  const stepPercent = countStepPercent({ step, max, min });\r\n  return ((current - min) / step) * stepPercent;\r\n};\r\n\r\n//рассчитываем шаг в процентах\r\nconst countStepPercent = ({ step, max, min }: ICountStepPixelProps) => {\r\n  return 100 / ((max - min) / step);\r\n};\r\n\r\n//расчитываем ширину прогрессбара\r\nconst countProgressWidth = ({\r\n  step,\r\n  max,\r\n  min,\r\n  to,\r\n  from,\r\n  isInterval,\r\n}: ICountProgressWidthProps): number => {\r\n  const stepPercent = countStepPercent({ max, min, step });\r\n  if (!isInterval) {\r\n    return ((to - min) / step) * stepPercent;\r\n  }\r\n  return (Math.abs(to - from) / step) * stepPercent;\r\n};\r\n\r\nconst lineBlockCreator = (model: IModelOptions) => {\r\n  const { from, max, min, step, to, isInterval } = model;\r\n\r\n  const shiftFrom = countShiftHandle({\r\n    current: from,\r\n    max,\r\n    min,\r\n    step,\r\n    isInterval,\r\n    handle: \"from\",\r\n  });\r\n  const shiftTo = countShiftHandle({\r\n    current: to,\r\n    max,\r\n    min,\r\n    step,\r\n    isInterval,\r\n    handle: \"to\",\r\n  });\r\n  const progressWidth = countProgressWidth({\r\n    from,\r\n    max,\r\n    min,\r\n    step,\r\n    to,\r\n    isInterval,\r\n  });\r\n  return {\r\n    shiftFrom,\r\n    shiftTo,\r\n    progressWidth,\r\n  };\r\n};\r\n\r\nexport {\r\n  lineBlockCreator,\r\n  countStepPercent,\r\n  countShiftHandle,\r\n  countProgressWidth,\r\n};\r\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"/"}